{
    "url": "https://www.concordia.ca/academics/undergraduate/computer-science.html",
    "title": "Computer Science Degree Program (BCompSc) | Our Core CompSci Degree at Concordia | Undergraduate Admissions - Apply Here  - Concordia University",
    "meta_description": "",
    "content": "# Computer Science (BCompSc)\n\n[Apply now](/admissions/undergraduate/apply-now.html)\n\nDegree\n\nBachelor of Computer Science (BCompSc)\n\nDepartment\n\n[Computer Science and Software Engineering](/ginacody/computer-science-\nsoftware-eng.html)\n\nFaculty\n\n[Gina Cody School of Engineering and Computer Science](/ginacody.html)\n\n  * Program overview\n  * Program structure\n  * Admission criteria\n  * After your degree\n\nDuration\n\n3 to 4 years\n\nPrimary campus\n\nSir George Williams (SGW)\n\nExperiential learning\n\nCo-op\n\nStart term\n\nFall, Winter\n\n  * Program overview\n  * Program structure\n  * Admission criteria\n  * After your degree\n\n## Virtual information sessions\n\nWant to know how we're training the next generation of engineers and computer\nscientists? Join us to learn about the Gina Cody School's undergraduate\nprograms and plans to advance integrated technologies in a socially\nresponsible manner.\n\n[ Register to an upcoming info session\n](https://go.concordia.ca/events/upcoming-events-\nlist/?event=GCS%20UnderGraduate%20Info%20Sessions)\n\n## Why study Computer Science?\n\nComputer science uses theoretical and mathematical foundations of computation\nto understand both software and hardware structure for effective and creative\ndesign.\n\nOur state-of-the-art labs for high-performance computing, networks and\nartificial intelligence will give you experience with the equipment you\u00e2\u0080\u0099ll\nuse in the field. Through labs, lectures and projects, you\u00e2\u0080\u0099ll also:\n\n  * Design and create new software, and modify and test existing software used in a broad range of businesses and industries\n  * Develop new or improve existing algorithms\n  * Explore emerging software/hardware technologies\n\n## Program highlights\n\n  * The student-run Software Engineering and Computer Science Student Society (SCS) organizes coding nights, algorithm practice, tutorials, social events, and networking opportunities.\n\n## Special funding for out-of-province students\n\nUp to **$4000** for undergraduate programs.  \n\n[Undergraduate applicants](/students/financial/scholarships-funding/out-of-\nprovince-awards.html)\n\n## Program structure\n\nA Bachelor of Computer Science degree takes a minimum of three or four years\n(90 \u00e2\u0080\u0093 120 credits) of full-time study, [depending on your academic\nbackground](/academics/degrees/program-length.html).\n\nThe core provides a basic and broad study of theory, mathematical basics,\nprogramming methodology, computer architecture, data structures, operating\nsystems, and software engineering.\n\n* * *\n\n### Program options\n\nNew students apply for admission to the Bachelor of Computer Science degree.\nOnce you have completed 30 credits, you may apply to the [Honours\nprogram](/ginacody/computer-science-software-eng/programs/computer-\nscience/bachelor/bcompsc-honours.html \"Original URL:\nhttps://www.concordia.ca/ginacody/computer-science-software-\neng/programs/computer-science/bachelor/bcompsc-honours.html. Click or tap if\nyou trust this link.\").\n\n[ Read more about the Computer Science program in the Undergraduate Calendar\n](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-\nengineering-and-computer-science/section-71-70-department-of-computer-science-\nand-software-engineering.html)\n\n* * *\n\n### Courses\n\n[ See full curriculum details in the Undergraduate Calendar\n](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-\nengineering-and-computer-science/section-71-70-department-of-computer-science-\nand-software-engineering.html)\n\n* * *\n\n**Core courses**\n\n  * Computer science core\n  * Complementary core\n\n* * *\n\n**Electives**\n\n  * Computer science electives\n  * Mathematics electives\n  * Minor and general electives  \n\n* * *\n\n[ See the complete list of courses in the Undergraduate Calendar\n](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-\nengineering-and-computer-science/section-71-70-department-of-computer-science-\nand-software-engineering/section-71-70-10-computer-science-and-software-\nengineering-courses.html)\n\n* * *\n\n**Course sequences**\n\n[ See the course sequences for the General Program ](/ginacody/computer-\nscience-software-eng/programs/computer-science/bachelor/bcompsc-\ngeneral/course-sequences.html)\n\n* * *\n\n### Co-op program\n\nThe Co-op program gives you the chance to complete **paid work terms** that\nlast 12 to 16 weeks. As a Co-op student, you will assist in projects designed\nand implemented by professionals and may also:\n\n  * Develop new or improve existing algorithms\n  * Participate in software quality assurance, programming, debugging and testing\n  * Prepare project proposals, specifications and software testing plans\n\nCo-op students have completed work terms for employers such as McKesson Canada\nand NeuroRx Research.\n\n[ Learn more about the Co-op program ](/ginacody/programs/co-op.html)\n\n## Admission criteria\n\n### Minimum cut-off averages and course requirements for admission\n\n  * **Quebec CEGEP:** 27 overall, 26 math\n    * Admission is based on applicants\u00e2\u0080\u0099 overall Math CRC indicated above and completion of the following classes as part of their DEC: Calculus 1 and Calculus 2 and Linear Algebra\n    * Students completing one of the **eligible technical DECs** may qualify for admission without the listed prerequisites. However, if the prerequisites are taken, a minimum of 26 in math is required.  \n\n      * Eligible technical DECs include 420.A0/BO/AA\n      * [Advanced standing](/admissions/undergraduate/requirements/cegep-students/partnerships.html#gcs) may be possible\n    * [Additional information for CEGEP applicants](/admissions/undergraduate/requirements/cegep-students.html)\n  * **High School** : A- overall, A- math\n    * One math from Pre-Calculus, Calculus, or equivalent\n    * [Canadian curricula course requirements](/admissions/undergraduate/requirements/canada.html) __\n    * [Accepted international qualifications](/admissions/undergraduate/requirements/international.html) __\n    * ACT or SAT is **not** required\n    * AP exams are **not** required but may qualify you for advanced standing\n  * **International Baccalaureate (IB) diploma:** 33 overall, 5 HL or 6 SL math\n    * one math (Applications and Interpretations HL, Analysis and Approaches HL or Analysis and Approaches SL)\n  * **International Baccalaureate Career-related Programme (CP):** 33 overall, 5 HL or 6 SL math\n    * [Additional Career-related Programme (CP) course requirements](https://www.concordia.ca/admissions/undergraduate/requirements/international.html#ib-cp \"https://www.concordia.ca/admissions/undergraduate/requirements/international.html#ib-cp\")\n  * **Baccalaureate fran\u00c3\u00a7ais** : 15 overall, 15 math\n    * Required courses:\n      * _Premi\u00c3\u00a8re: Sp\u00c3\u00a9cialit\u00c3\u00a9 math\u00c3\u00a9matiques_\n      * _Terminale: Sp\u00c3\u00a9cialit\u00c3\u00a9 math\u00c3\u00a9matiques_\n    * [Additional information for Baccalaur\u00c3\u00a9at fran\u00c3\u00a7ais applicants](/admissions/undergraduate/requirements/international.html)\n  * **British system of education (GCE):**\n    * **A-levels:** At least two A-level exams AB, A in math _**or**_\n    * **AS-levels:** At least 4 AS-level exams with equivalent results _**or**_\n    * **BTEC:** Level 3 Diploma or Extended Diploma in a related subject area with equivalent results\n    * Students without A-level math may be admissible based on AS-level or iGCSE/GCSE/O-Level exam results. Students should include all their exam results from iGCSE (or equivalent) onwards to support their application.\n    * [Additional information for British System of Education (GCE) applicants](/admissions/undergraduate/requirements/international.html#UK)\n  * **University transfers (internal):** 3.0 overall, 3.0 in math, 2.3 in courses offered by the Gina Cody School of Engineering and Computer Science\n    * At least two of the following (or equivalent): MATH 203, 204, 205\n  * **University transfers (external):** A- overall, A- in math\n    * Courses in the disciplines of Calculus and Linear Algebra\n\n* * *\n\n[ You must meet Concordia's minimum admission requirements\n](/admissions/undergraduate/requirements.html)\n\n* * *\n\nMinimum cut-off averages should be used as indicators. The cut-off data may\nchange depending on the applicant pool. Applicants who meet the stated minimum\nrequirements are not guaranteed admission to these programs.\n\n* * *\n\n## Application deadlines\n\n### It\u00e2\u0080\u0099s not too late to apply\n\nMost undergraduate programs are still accepting applications for fall 2025.\n\n[ Check program availability\n](/admissions/undergraduate/programs/availability.html)\n\n* * *\n\n#### **FALL ENTRY (September)**\n\nDeadline: **March 1**  \n**International applicants:** Apply **no later than February 1** to allow time\nfor immigration document processing. However, applying **earlier is strongly\nrecommended**. Immigration processing times vary by country, and delays could\nprevent you from starting your studies on time.\n\n#### **WINTER ENTRY (January)**\n\nDeadline: **November 1**  \n**International applicants:** Apply **no later than August 1** to allow time\nfor immigration document processing. However, applying **earlier is strongly\nrecommended**. Immigration processing times vary by country, and delays could\nprevent you from starting your studies on time.\n\n* * *\n\n_We reserve the right to close admission to a program at any time after the\nofficial deadline without prior notice._\n\n* * *\n\n## Funding note\n\n**Quebec residents** who enroll in certain programs and meet the eligibility\ncriteria may apply for funding of $2,500 per term through the Quebec\nPerspective Bursary (Bourse Perspective Quebec).\n\n[ See eligibility ](/students/financial/scholarships-funding/perspective-\nquebec.html)\n\n**United States students** : A U.S. Federal Student Aid-eligible version of\nthis program is offered. This version meets all U.S. regulations (such as no\nco-operative education or e-courses) for eligible programs.\n\n[ Get the full details about U.S. loan eligibility and requirements\n](/students/financial/loans/us/federal-direct.html)\n\n* * *\n\n## After your degree\n\nGiven the range of applications in use today, computer science alumni have\nestablished careers in a range of sectors including**** health care,\ncommunications, manufacturing, banking, retail, electronics and entertainment.\n\n[ Learn more about career options in Computer Science\n](/students/success/career-planning/paths/computer-science-software-\nengineering.html)\n\n## Student story\n\n### Ghazal Zamani\n\nBachelor of Computer Science\n\nHow software developer Ghazal Zamani found her passion as a student.\n\n[Meet Ghazal](/content/shared/en/profiles/students/undergraduate/ghazal-\nzamani.html?c=/admissions/undergraduate)\n\n[ Check out more student stories ](/admissions/student-profiles.html)\n\n## Other programs of interest\n\n###\n\nComputer Engineering (BEng)\n\n  * Co-op\n  * Internship\n\nWithout computer hardware there would be no smart phones, DVD players and\ndigital recorders or computerized medical devices. As a computer engineer,\nyour knowledge of computer architecture, digital electronics, circuits and\ndigital communication will lead to new innovations or bring about another\ninformation revolution.\n\nDepartment\n\n[Department of Electrical and Computer Engineering](/ginacody/electrical-\ncomputer-eng.html)\n\nFaculty\n\n[Gina Cody School of Engineering and Computer Science](/ginacody.html)\n\n[View program details](/academics/undergraduate/computer-engineering.html\n\"Computer Engineering \\(BEng\\)\")\n\n",
    "subpages": {
        "https://www.concordia.ca/academics/undergraduate/computer-science.html#content-main": {
            "url": "https://www.concordia.ca/academics/undergraduate/computer-science.html#content-main",
            "title": "Computer Science Degree Program (BCompSc) | Our Core CompSci Degree at Concordia | Undergraduate Admissions - Apply Here  - Concordia University",
            "meta_description": "",
            "content": "# Computer Science (BCompSc)\n\n[Apply now](/admissions/undergraduate/apply-now.html)\n\nDegree\n\nBachelor of Computer Science (BCompSc)\n\nDepartment\n\n[Computer Science and Software Engineering](/ginacody/computer-science-\nsoftware-eng.html)\n\nFaculty\n\n[Gina Cody School of Engineering and Computer Science](/ginacody.html)\n\n  * Program overview\n  * Program structure\n  * Admission criteria\n  * After your degree\n\nDuration\n\n3 to 4 years\n\nPrimary campus\n\nSir George Williams (SGW)\n\nExperiential learning\n\nCo-op\n\nStart term\n\nFall, Winter\n\n  * Program overview\n  * Program structure\n  * Admission criteria\n  * After your degree\n\n## Virtual information sessions\n\nWant to know how we're training the next generation of engineers and computer\nscientists? Join us to learn about the Gina Cody School's undergraduate\nprograms and plans to advance integrated technologies in a socially\nresponsible manner.\n\n[ Register to an upcoming info session\n](https://go.concordia.ca/events/upcoming-events-\nlist/?event=GCS%20UnderGraduate%20Info%20Sessions)\n\n## Why study Computer Science?\n\nComputer science uses theoretical and mathematical foundations of computation\nto understand both software and hardware structure for effective and creative\ndesign.\n\nOur state-of-the-art labs for high-performance computing, networks and\nartificial intelligence will give you experience with the equipment you\u00e2\u0080\u0099ll\nuse in the field. Through labs, lectures and projects, you\u00e2\u0080\u0099ll also:\n\n  * Design and create new software, and modify and test existing software used in a broad range of businesses and industries\n  * Develop new or improve existing algorithms\n  * Explore emerging software/hardware technologies\n\n## Program highlights\n\n  * The student-run Software Engineering and Computer Science Student Society (SCS) organizes coding nights, algorithm practice, tutorials, social events, and networking opportunities.\n\n## Special funding for out-of-province students\n\nUp to **$4000** for undergraduate programs.  \n\n[Undergraduate applicants](/students/financial/scholarships-funding/out-of-\nprovince-awards.html)\n\n## Program structure\n\nA Bachelor of Computer Science degree takes a minimum of three or four years\n(90 \u00e2\u0080\u0093 120 credits) of full-time study, [depending on your academic\nbackground](/academics/degrees/program-length.html).\n\nThe core provides a basic and broad study of theory, mathematical basics,\nprogramming methodology, computer architecture, data structures, operating\nsystems, and software engineering.\n\n* * *\n\n### Program options\n\nNew students apply for admission to the Bachelor of Computer Science degree.\nOnce you have completed 30 credits, you may apply to the [Honours\nprogram](/ginacody/computer-science-software-eng/programs/computer-\nscience/bachelor/bcompsc-honours.html \"Original URL:\nhttps://www.concordia.ca/ginacody/computer-science-software-\neng/programs/computer-science/bachelor/bcompsc-honours.html. Click or tap if\nyou trust this link.\").\n\n[ Read more about the Computer Science program in the Undergraduate Calendar\n](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-\nengineering-and-computer-science/section-71-70-department-of-computer-science-\nand-software-engineering.html)\n\n* * *\n\n### Courses\n\n[ See full curriculum details in the Undergraduate Calendar\n](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-\nengineering-and-computer-science/section-71-70-department-of-computer-science-\nand-software-engineering.html)\n\n* * *\n\n**Core courses**\n\n  * Computer science core\n  * Complementary core\n\n* * *\n\n**Electives**\n\n  * Computer science electives\n  * Mathematics electives\n  * Minor and general electives  \n\n* * *\n\n[ See the complete list of courses in the Undergraduate Calendar\n](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-\nengineering-and-computer-science/section-71-70-department-of-computer-science-\nand-software-engineering/section-71-70-10-computer-science-and-software-\nengineering-courses.html)\n\n* * *\n\n**Course sequences**\n\n[ See the course sequences for the General Program ](/ginacody/computer-\nscience-software-eng/programs/computer-science/bachelor/bcompsc-\ngeneral/course-sequences.html)\n\n* * *\n\n### Co-op program\n\nThe Co-op program gives you the chance to complete **paid work terms** that\nlast 12 to 16 weeks. As a Co-op student, you will assist in projects designed\nand implemented by professionals and may also:\n\n  * Develop new or improve existing algorithms\n  * Participate in software quality assurance, programming, debugging and testing\n  * Prepare project proposals, specifications and software testing plans\n\nCo-op students have completed work terms for employers such as McKesson Canada\nand NeuroRx Research.\n\n[ Learn more about the Co-op program ](/ginacody/programs/co-op.html)\n\n## Admission criteria\n\n### Minimum cut-off averages and course requirements for admission\n\n  * **Quebec CEGEP:** 27 overall, 26 math\n    * Admission is based on applicants\u00e2\u0080\u0099 overall Math CRC indicated above and completion of the following classes as part of their DEC: Calculus 1 and Calculus 2 and Linear Algebra\n    * Students completing one of the **eligible technical DECs** may qualify for admission without the listed prerequisites. However, if the prerequisites are taken, a minimum of 26 in math is required.  \n\n      * Eligible technical DECs include 420.A0/BO/AA\n      * [Advanced standing](/admissions/undergraduate/requirements/cegep-students/partnerships.html#gcs) may be possible\n    * [Additional information for CEGEP applicants](/admissions/undergraduate/requirements/cegep-students.html)\n  * **High School** : A- overall, A- math\n    * One math from Pre-Calculus, Calculus, or equivalent\n    * [Canadian curricula course requirements](/admissions/undergraduate/requirements/canada.html) __\n    * [Accepted international qualifications](/admissions/undergraduate/requirements/international.html) __\n    * ACT or SAT is **not** required\n    * AP exams are **not** required but may qualify you for advanced standing\n  * **International Baccalaureate (IB) diploma:** 33 overall, 5 HL or 6 SL math\n    * one math (Applications and Interpretations HL, Analysis and Approaches HL or Analysis and Approaches SL)\n  * **International Baccalaureate Career-related Programme (CP):** 33 overall, 5 HL or 6 SL math\n    * [Additional Career-related Programme (CP) course requirements](https://www.concordia.ca/admissions/undergraduate/requirements/international.html#ib-cp \"https://www.concordia.ca/admissions/undergraduate/requirements/international.html#ib-cp\")\n  * **Baccalaureate fran\u00c3\u00a7ais** : 15 overall, 15 math\n    * Required courses:\n      * _Premi\u00c3\u00a8re: Sp\u00c3\u00a9cialit\u00c3\u00a9 math\u00c3\u00a9matiques_\n      * _Terminale: Sp\u00c3\u00a9cialit\u00c3\u00a9 math\u00c3\u00a9matiques_\n    * [Additional information for Baccalaur\u00c3\u00a9at fran\u00c3\u00a7ais applicants](/admissions/undergraduate/requirements/international.html)\n  * **British system of education (GCE):**\n    * **A-levels:** At least two A-level exams AB, A in math _**or**_\n    * **AS-levels:** At least 4 AS-level exams with equivalent results _**or**_\n    * **BTEC:** Level 3 Diploma or Extended Diploma in a related subject area with equivalent results\n    * Students without A-level math may be admissible based on AS-level or iGCSE/GCSE/O-Level exam results. Students should include all their exam results from iGCSE (or equivalent) onwards to support their application.\n    * [Additional information for British System of Education (GCE) applicants](/admissions/undergraduate/requirements/international.html#UK)\n  * **University transfers (internal):** 3.0 overall, 3.0 in math, 2.3 in courses offered by the Gina Cody School of Engineering and Computer Science\n    * At least two of the following (or equivalent): MATH 203, 204, 205\n  * **University transfers (external):** A- overall, A- in math\n    * Courses in the disciplines of Calculus and Linear Algebra\n\n* * *\n\n[ You must meet Concordia's minimum admission requirements\n](/admissions/undergraduate/requirements.html)\n\n* * *\n\nMinimum cut-off averages should be used as indicators. The cut-off data may\nchange depending on the applicant pool. Applicants who meet the stated minimum\nrequirements are not guaranteed admission to these programs.\n\n* * *\n\n## Application deadlines\n\n### It\u00e2\u0080\u0099s not too late to apply\n\nMost undergraduate programs are still accepting applications for fall 2025.\n\n[ Check program availability\n](/admissions/undergraduate/programs/availability.html)\n\n* * *\n\n#### **FALL ENTRY (September)**\n\nDeadline: **March 1**  \n**International applicants:** Apply **no later than February 1** to allow time\nfor immigration document processing. However, applying **earlier is strongly\nrecommended**. Immigration processing times vary by country, and delays could\nprevent you from starting your studies on time.\n\n#### **WINTER ENTRY (January)**\n\nDeadline: **November 1**  \n**International applicants:** Apply **no later than August 1** to allow time\nfor immigration document processing. However, applying **earlier is strongly\nrecommended**. Immigration processing times vary by country, and delays could\nprevent you from starting your studies on time.\n\n* * *\n\n_We reserve the right to close admission to a program at any time after the\nofficial deadline without prior notice._\n\n* * *\n\n## Funding note\n\n**Quebec residents** who enroll in certain programs and meet the eligibility\ncriteria may apply for funding of $2,500 per term through the Quebec\nPerspective Bursary (Bourse Perspective Quebec).\n\n[ See eligibility ](/students/financial/scholarships-funding/perspective-\nquebec.html)\n\n**United States students** : A U.S. Federal Student Aid-eligible version of\nthis program is offered. This version meets all U.S. regulations (such as no\nco-operative education or e-courses) for eligible programs.\n\n[ Get the full details about U.S. loan eligibility and requirements\n](/students/financial/loans/us/federal-direct.html)\n\n* * *\n\n## After your degree\n\nGiven the range of applications in use today, computer science alumni have\nestablished careers in a range of sectors including**** health care,\ncommunications, manufacturing, banking, retail, electronics and entertainment.\n\n[ Learn more about career options in Computer Science\n](/students/success/career-planning/paths/computer-science-software-\nengineering.html)\n\n## Student story\n\n### Ghazal Zamani\n\nBachelor of Computer Science\n\nHow software developer Ghazal Zamani found her passion as a student.\n\n[Meet Ghazal](/content/shared/en/profiles/students/undergraduate/ghazal-\nzamani.html?c=/admissions/undergraduate)\n\n[ Check out more student stories ](/admissions/student-profiles.html)\n\n## Other programs of interest\n\n###\n\nComputer Engineering (BEng)\n\n  * Co-op\n  * Internship\n\nWithout computer hardware there would be no smart phones, DVD players and\ndigital recorders or computerized medical devices. As a computer engineer,\nyour knowledge of computer architecture, digital electronics, circuits and\ndigital communication will lead to new innovations or bring about another\ninformation revolution.\n\nDepartment\n\n[Department of Electrical and Computer Engineering](/ginacody/electrical-\ncomputer-eng.html)\n\nFaculty\n\n[Gina Cody School of Engineering and Computer Science](/ginacody.html)\n\n[View program details](/academics/undergraduate/computer-engineering.html\n\"Computer Engineering \\(BEng\\)\")\n\n",
            "subpages": {
                "https://www.concordia.ca/ginacody/computer-science-software-eng.html": {
                    "url": "https://www.concordia.ca/ginacody/computer-science-software-eng.html",
                    "title": "Department of Computer Science & Software Engineering - Concordia University",
                    "meta_description": "",
                    "content": "# Department of Computer Science and Software Engineering (CSSE)\n\nWhere the future of artificial intelligence, Industry 4.0  \nand big data lives.  \n\n##  \n  \nCelebrating 50 years of computer science\n\nWe're leaders in pattern recognition, artificial intelligence, software\nengineering and more.\n\n[Read our story](/news/stories/2022/08/26/concordia-celebrates-50-years-of-\ncomputer-science-teaching-and-research.html)\n\n## Discover our programs\n\nOur programs offer hands-on learning experience to our students, under the\nguidance of subject matter experts.\n\n### [Computer Science ](/ginacody/computer-science-software-\neng/programs/computer-science.html)\n\n### [Software Engineering ](/ginacody/computer-science-software-\neng/programs/software-eng.html)\n\n## Find resources for prospective students\n\nAre you looking for information or support? Explore the resources available to\nyou as you navigate the admissions process.\n\n[ Program information ](/ginacody/computer-science-software-eng/students.html)\n\n[ Course schedules ](/ginacody/students/course-schedules.html)\n\n[ Undergraduate application deadlines\n](/admissions/undergraduate/apply.html#application-deadlines)\n\n[ Graduate application deadlines ](/gradstudies/future-students/programs.html)\n\n[ On-campus resources ](/content/dam/ginacody/csse/docs/Student-Resources-Web-\nLinks.pdf)\n\n[ Schedule an advising appointment\n](https://app.acuityscheduling.com/schedule.php?owner=18004019\u00e2\u0080\u008b)\n\n## Meet our faculty and staff\n\nOur faculty and staff members are available to provide you with information or\nsupport.\n\n[ Faculty members ](/ginacody/computer-science-software-eng/about/faculty-\nmembers.html)\n\n[ Staff ](/ginacody/computer-science-software-eng/about/staff.html)\n\n## View job opportunities\n\nFrom teaching positions to student jobs, explore the opportunities available\nin the department.\n\n[ Faculty & teaching opportunities ](/ginacody/computer-science-software-\neng/about/jobs.html)\n\n[ TEACHING OPPORTUNITIES FOR STUDENTS ](/ginacody/computer-science-software-\neng/about/jobs.html)\n\n## News & accolades\n\n[ RESEARCH: A new virtual reality system makes epilepsy surgery planning much\neasier and faster ](/cunews/encs/2025/03/27/research-a-new-virtual-reality-\nsystem-makes-epilepsy-surgery-planning-much-easier-and-faster.html)\n\nMarch 27, 2025\n\n[ Gina Cody School students showcase engineering innovation\n](/cunews/encs/2025/03/24/capstone-poster-presentation.html)\n\nMarch 24, 2025\n\n[ A new Concordia-developed app can greatly improve ventriculostomy safety and\naccuracy ](/news/stories/2025/03/20/a-new-concordia-developed-app-can-greatly-\nimprove-ventriculostomy-safety-and-accuracy.html)\n\nMarch 19, 2025\n\n[ More department news ](/ginacody/dev-computer-science-software-\neng/news.html)\n\n[ More news & accolades ](/ginacody/dev-computer-science-software-\neng/news.html)\n\n## Events & notices\n\n  * [ Upcoming  \nApr. 10  PhD Oral Exam - Arthur Vitui, Computer Science 1 p.m. \u2014 4 p.m.\n](/cuevents/offices/vprgs/sgs/2025/04/10/phd-oral-exam-arthur-vitui-computer-\nscience.html \"PhD Oral Exam - Arthur Vitui, Computer Science\")\n\n* * *\n\n[ View more events ](/ginacody/computer-science-software-eng/events.html)\n\n* * *\n\n## Follow us on Flickr\n\nCome see what the Department of Computer Science and Software Engineering has\nbeen up to!\n\n[Check out our photo galleries](https://www.flickr.com/photos/encs-\nconcordia/albums)\n\n",
                    "subpages": {}
                },
                "https://www.concordia.ca/academics/undergraduate/computer-science.html#overview": {
                    "url": "https://www.concordia.ca/academics/undergraduate/computer-science.html#overview",
                    "title": "Computer Science Degree Program (BCompSc) | Our Core CompSci Degree at Concordia | Undergraduate Admissions - Apply Here  - Concordia University",
                    "meta_description": "",
                    "content": "# Computer Science (BCompSc)\n\n[Apply now](/admissions/undergraduate/apply-now.html)\n\nDegree\n\nBachelor of Computer Science (BCompSc)\n\nDepartment\n\n[Computer Science and Software Engineering](/ginacody/computer-science-\nsoftware-eng.html)\n\nFaculty\n\n[Gina Cody School of Engineering and Computer Science](/ginacody.html)\n\n  * Program overview\n  * Program structure\n  * Admission criteria\n  * After your degree\n\nDuration\n\n3 to 4 years\n\nPrimary campus\n\nSir George Williams (SGW)\n\nExperiential learning\n\nCo-op\n\nStart term\n\nFall, Winter\n\n  * Program overview\n  * Program structure\n  * Admission criteria\n  * After your degree\n\n## Virtual information sessions\n\nWant to know how we're training the next generation of engineers and computer\nscientists? Join us to learn about the Gina Cody School's undergraduate\nprograms and plans to advance integrated technologies in a socially\nresponsible manner.\n\n[ Register to an upcoming info session\n](https://go.concordia.ca/events/upcoming-events-\nlist/?event=GCS%20UnderGraduate%20Info%20Sessions)\n\n## Why study Computer Science?\n\nComputer science uses theoretical and mathematical foundations of computation\nto understand both software and hardware structure for effective and creative\ndesign.\n\nOur state-of-the-art labs for high-performance computing, networks and\nartificial intelligence will give you experience with the equipment you\u00e2\u0080\u0099ll\nuse in the field. Through labs, lectures and projects, you\u00e2\u0080\u0099ll also:\n\n  * Design and create new software, and modify and test existing software used in a broad range of businesses and industries\n  * Develop new or improve existing algorithms\n  * Explore emerging software/hardware technologies\n\n## Program highlights\n\n  * The student-run Software Engineering and Computer Science Student Society (SCS) organizes coding nights, algorithm practice, tutorials, social events, and networking opportunities.\n\n## Special funding for out-of-province students\n\nUp to **$4000** for undergraduate programs.  \n\n[Undergraduate applicants](/students/financial/scholarships-funding/out-of-\nprovince-awards.html)\n\n## Program structure\n\nA Bachelor of Computer Science degree takes a minimum of three or four years\n(90 \u00e2\u0080\u0093 120 credits) of full-time study, [depending on your academic\nbackground](/academics/degrees/program-length.html).\n\nThe core provides a basic and broad study of theory, mathematical basics,\nprogramming methodology, computer architecture, data structures, operating\nsystems, and software engineering.\n\n* * *\n\n### Program options\n\nNew students apply for admission to the Bachelor of Computer Science degree.\nOnce you have completed 30 credits, you may apply to the [Honours\nprogram](/ginacody/computer-science-software-eng/programs/computer-\nscience/bachelor/bcompsc-honours.html \"Original URL:\nhttps://www.concordia.ca/ginacody/computer-science-software-\neng/programs/computer-science/bachelor/bcompsc-honours.html. Click or tap if\nyou trust this link.\").\n\n[ Read more about the Computer Science program in the Undergraduate Calendar\n](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-\nengineering-and-computer-science/section-71-70-department-of-computer-science-\nand-software-engineering.html)\n\n* * *\n\n### Courses\n\n[ See full curriculum details in the Undergraduate Calendar\n](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-\nengineering-and-computer-science/section-71-70-department-of-computer-science-\nand-software-engineering.html)\n\n* * *\n\n**Core courses**\n\n  * Computer science core\n  * Complementary core\n\n* * *\n\n**Electives**\n\n  * Computer science electives\n  * Mathematics electives\n  * Minor and general electives  \n\n* * *\n\n[ See the complete list of courses in the Undergraduate Calendar\n](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-\nengineering-and-computer-science/section-71-70-department-of-computer-science-\nand-software-engineering/section-71-70-10-computer-science-and-software-\nengineering-courses.html)\n\n* * *\n\n**Course sequences**\n\n[ See the course sequences for the General Program ](/ginacody/computer-\nscience-software-eng/programs/computer-science/bachelor/bcompsc-\ngeneral/course-sequences.html)\n\n* * *\n\n### Co-op program\n\nThe Co-op program gives you the chance to complete **paid work terms** that\nlast 12 to 16 weeks. As a Co-op student, you will assist in projects designed\nand implemented by professionals and may also:\n\n  * Develop new or improve existing algorithms\n  * Participate in software quality assurance, programming, debugging and testing\n  * Prepare project proposals, specifications and software testing plans\n\nCo-op students have completed work terms for employers such as McKesson Canada\nand NeuroRx Research.\n\n[ Learn more about the Co-op program ](/ginacody/programs/co-op.html)\n\n## Admission criteria\n\n### Minimum cut-off averages and course requirements for admission\n\n  * **Quebec CEGEP:** 27 overall, 26 math\n    * Admission is based on applicants\u00e2\u0080\u0099 overall Math CRC indicated above and completion of the following classes as part of their DEC: Calculus 1 and Calculus 2 and Linear Algebra\n    * Students completing one of the **eligible technical DECs** may qualify for admission without the listed prerequisites. However, if the prerequisites are taken, a minimum of 26 in math is required.  \n\n      * Eligible technical DECs include 420.A0/BO/AA\n      * [Advanced standing](/admissions/undergraduate/requirements/cegep-students/partnerships.html#gcs) may be possible\n    * [Additional information for CEGEP applicants](/admissions/undergraduate/requirements/cegep-students.html)\n  * **High School** : A- overall, A- math\n    * One math from Pre-Calculus, Calculus, or equivalent\n    * [Canadian curricula course requirements](/admissions/undergraduate/requirements/canada.html) __\n    * [Accepted international qualifications](/admissions/undergraduate/requirements/international.html) __\n    * ACT or SAT is **not** required\n    * AP exams are **not** required but may qualify you for advanced standing\n  * **International Baccalaureate (IB) diploma:** 33 overall, 5 HL or 6 SL math\n    * one math (Applications and Interpretations HL, Analysis and Approaches HL or Analysis and Approaches SL)\n  * **International Baccalaureate Career-related Programme (CP):** 33 overall, 5 HL or 6 SL math\n    * [Additional Career-related Programme (CP) course requirements](https://www.concordia.ca/admissions/undergraduate/requirements/international.html#ib-cp \"https://www.concordia.ca/admissions/undergraduate/requirements/international.html#ib-cp\")\n  * **Baccalaureate fran\u00c3\u00a7ais** : 15 overall, 15 math\n    * Required courses:\n      * _Premi\u00c3\u00a8re: Sp\u00c3\u00a9cialit\u00c3\u00a9 math\u00c3\u00a9matiques_\n      * _Terminale: Sp\u00c3\u00a9cialit\u00c3\u00a9 math\u00c3\u00a9matiques_\n    * [Additional information for Baccalaur\u00c3\u00a9at fran\u00c3\u00a7ais applicants](/admissions/undergraduate/requirements/international.html)\n  * **British system of education (GCE):**\n    * **A-levels:** At least two A-level exams AB, A in math _**or**_\n    * **AS-levels:** At least 4 AS-level exams with equivalent results _**or**_\n    * **BTEC:** Level 3 Diploma or Extended Diploma in a related subject area with equivalent results\n    * Students without A-level math may be admissible based on AS-level or iGCSE/GCSE/O-Level exam results. Students should include all their exam results from iGCSE (or equivalent) onwards to support their application.\n    * [Additional information for British System of Education (GCE) applicants](/admissions/undergraduate/requirements/international.html#UK)\n  * **University transfers (internal):** 3.0 overall, 3.0 in math, 2.3 in courses offered by the Gina Cody School of Engineering and Computer Science\n    * At least two of the following (or equivalent): MATH 203, 204, 205\n  * **University transfers (external):** A- overall, A- in math\n    * Courses in the disciplines of Calculus and Linear Algebra\n\n* * *\n\n[ You must meet Concordia's minimum admission requirements\n](/admissions/undergraduate/requirements.html)\n\n* * *\n\nMinimum cut-off averages should be used as indicators. The cut-off data may\nchange depending on the applicant pool. Applicants who meet the stated minimum\nrequirements are not guaranteed admission to these programs.\n\n* * *\n\n## Application deadlines\n\n### It\u00e2\u0080\u0099s not too late to apply\n\nMost undergraduate programs are still accepting applications for fall 2025.\n\n[ Check program availability\n](/admissions/undergraduate/programs/availability.html)\n\n* * *\n\n#### **FALL ENTRY (September)**\n\nDeadline: **March 1**  \n**International applicants:** Apply **no later than February 1** to allow time\nfor immigration document processing. However, applying **earlier is strongly\nrecommended**. Immigration processing times vary by country, and delays could\nprevent you from starting your studies on time.\n\n#### **WINTER ENTRY (January)**\n\nDeadline: **November 1**  \n**International applicants:** Apply **no later than August 1** to allow time\nfor immigration document processing. However, applying **earlier is strongly\nrecommended**. Immigration processing times vary by country, and delays could\nprevent you from starting your studies on time.\n\n* * *\n\n_We reserve the right to close admission to a program at any time after the\nofficial deadline without prior notice._\n\n* * *\n\n## Funding note\n\n**Quebec residents** who enroll in certain programs and meet the eligibility\ncriteria may apply for funding of $2,500 per term through the Quebec\nPerspective Bursary (Bourse Perspective Quebec).\n\n[ See eligibility ](/students/financial/scholarships-funding/perspective-\nquebec.html)\n\n**United States students** : A U.S. Federal Student Aid-eligible version of\nthis program is offered. This version meets all U.S. regulations (such as no\nco-operative education or e-courses) for eligible programs.\n\n[ Get the full details about U.S. loan eligibility and requirements\n](/students/financial/loans/us/federal-direct.html)\n\n* * *\n\n## After your degree\n\nGiven the range of applications in use today, computer science alumni have\nestablished careers in a range of sectors including**** health care,\ncommunications, manufacturing, banking, retail, electronics and entertainment.\n\n[ Learn more about career options in Computer Science\n](/students/success/career-planning/paths/computer-science-software-\nengineering.html)\n\n## Student story\n\n### Ghazal Zamani\n\nBachelor of Computer Science\n\nHow software developer Ghazal Zamani found her passion as a student.\n\n[Meet Ghazal](/content/shared/en/profiles/students/undergraduate/ghazal-\nzamani.html?c=/admissions/undergraduate)\n\n[ Check out more student stories ](/admissions/student-profiles.html)\n\n## Other programs of interest\n\n###\n\nComputer Engineering (BEng)\n\n  * Co-op\n  * Internship\n\nWithout computer hardware there would be no smart phones, DVD players and\ndigital recorders or computerized medical devices. As a computer engineer,\nyour knowledge of computer architecture, digital electronics, circuits and\ndigital communication will lead to new innovations or bring about another\ninformation revolution.\n\nDepartment\n\n[Department of Electrical and Computer Engineering](/ginacody/electrical-\ncomputer-eng.html)\n\nFaculty\n\n[Gina Cody School of Engineering and Computer Science](/ginacody.html)\n\n[View program details](/academics/undergraduate/computer-engineering.html\n\"Computer Engineering \\(BEng\\)\")\n\n",
                    "subpages": {}
                },
                "https://www.concordia.ca/academics/undergraduate/computer-science.html#structure": {
                    "url": "https://www.concordia.ca/academics/undergraduate/computer-science.html#structure",
                    "title": "Computer Science Degree Program (BCompSc) | Our Core CompSci Degree at Concordia | Undergraduate Admissions - Apply Here  - Concordia University",
                    "meta_description": "",
                    "content": "# Computer Science (BCompSc)\n\n[Apply now](/admissions/undergraduate/apply-now.html)\n\nDegree\n\nBachelor of Computer Science (BCompSc)\n\nDepartment\n\n[Computer Science and Software Engineering](/ginacody/computer-science-\nsoftware-eng.html)\n\nFaculty\n\n[Gina Cody School of Engineering and Computer Science](/ginacody.html)\n\n  * Program overview\n  * Program structure\n  * Admission criteria\n  * After your degree\n\nDuration\n\n3 to 4 years\n\nPrimary campus\n\nSir George Williams (SGW)\n\nExperiential learning\n\nCo-op\n\nStart term\n\nFall, Winter\n\n  * Program overview\n  * Program structure\n  * Admission criteria\n  * After your degree\n\n## Virtual information sessions\n\nWant to know how we're training the next generation of engineers and computer\nscientists? Join us to learn about the Gina Cody School's undergraduate\nprograms and plans to advance integrated technologies in a socially\nresponsible manner.\n\n[ Register to an upcoming info session\n](https://go.concordia.ca/events/upcoming-events-\nlist/?event=GCS%20UnderGraduate%20Info%20Sessions)\n\n## Why study Computer Science?\n\nComputer science uses theoretical and mathematical foundations of computation\nto understand both software and hardware structure for effective and creative\ndesign.\n\nOur state-of-the-art labs for high-performance computing, networks and\nartificial intelligence will give you experience with the equipment you\u00e2\u0080\u0099ll\nuse in the field. Through labs, lectures and projects, you\u00e2\u0080\u0099ll also:\n\n  * Design and create new software, and modify and test existing software used in a broad range of businesses and industries\n  * Develop new or improve existing algorithms\n  * Explore emerging software/hardware technologies\n\n## Program highlights\n\n  * The student-run Software Engineering and Computer Science Student Society (SCS) organizes coding nights, algorithm practice, tutorials, social events, and networking opportunities.\n\n## Special funding for out-of-province students\n\nUp to **$4000** for undergraduate programs.  \n\n[Undergraduate applicants](/students/financial/scholarships-funding/out-of-\nprovince-awards.html)\n\n## Program structure\n\nA Bachelor of Computer Science degree takes a minimum of three or four years\n(90 \u00e2\u0080\u0093 120 credits) of full-time study, [depending on your academic\nbackground](/academics/degrees/program-length.html).\n\nThe core provides a basic and broad study of theory, mathematical basics,\nprogramming methodology, computer architecture, data structures, operating\nsystems, and software engineering.\n\n* * *\n\n### Program options\n\nNew students apply for admission to the Bachelor of Computer Science degree.\nOnce you have completed 30 credits, you may apply to the [Honours\nprogram](/ginacody/computer-science-software-eng/programs/computer-\nscience/bachelor/bcompsc-honours.html \"Original URL:\nhttps://www.concordia.ca/ginacody/computer-science-software-\neng/programs/computer-science/bachelor/bcompsc-honours.html. Click or tap if\nyou trust this link.\").\n\n[ Read more about the Computer Science program in the Undergraduate Calendar\n](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-\nengineering-and-computer-science/section-71-70-department-of-computer-science-\nand-software-engineering.html)\n\n* * *\n\n### Courses\n\n[ See full curriculum details in the Undergraduate Calendar\n](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-\nengineering-and-computer-science/section-71-70-department-of-computer-science-\nand-software-engineering.html)\n\n* * *\n\n**Core courses**\n\n  * Computer science core\n  * Complementary core\n\n* * *\n\n**Electives**\n\n  * Computer science electives\n  * Mathematics electives\n  * Minor and general electives  \n\n* * *\n\n[ See the complete list of courses in the Undergraduate Calendar\n](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-\nengineering-and-computer-science/section-71-70-department-of-computer-science-\nand-software-engineering/section-71-70-10-computer-science-and-software-\nengineering-courses.html)\n\n* * *\n\n**Course sequences**\n\n[ See the course sequences for the General Program ](/ginacody/computer-\nscience-software-eng/programs/computer-science/bachelor/bcompsc-\ngeneral/course-sequences.html)\n\n* * *\n\n### Co-op program\n\nThe Co-op program gives you the chance to complete **paid work terms** that\nlast 12 to 16 weeks. As a Co-op student, you will assist in projects designed\nand implemented by professionals and may also:\n\n  * Develop new or improve existing algorithms\n  * Participate in software quality assurance, programming, debugging and testing\n  * Prepare project proposals, specifications and software testing plans\n\nCo-op students have completed work terms for employers such as McKesson Canada\nand NeuroRx Research.\n\n[ Learn more about the Co-op program ](/ginacody/programs/co-op.html)\n\n## Admission criteria\n\n### Minimum cut-off averages and course requirements for admission\n\n  * **Quebec CEGEP:** 27 overall, 26 math\n    * Admission is based on applicants\u00e2\u0080\u0099 overall Math CRC indicated above and completion of the following classes as part of their DEC: Calculus 1 and Calculus 2 and Linear Algebra\n    * Students completing one of the **eligible technical DECs** may qualify for admission without the listed prerequisites. However, if the prerequisites are taken, a minimum of 26 in math is required.  \n\n      * Eligible technical DECs include 420.A0/BO/AA\n      * [Advanced standing](/admissions/undergraduate/requirements/cegep-students/partnerships.html#gcs) may be possible\n    * [Additional information for CEGEP applicants](/admissions/undergraduate/requirements/cegep-students.html)\n  * **High School** : A- overall, A- math\n    * One math from Pre-Calculus, Calculus, or equivalent\n    * [Canadian curricula course requirements](/admissions/undergraduate/requirements/canada.html) __\n    * [Accepted international qualifications](/admissions/undergraduate/requirements/international.html) __\n    * ACT or SAT is **not** required\n    * AP exams are **not** required but may qualify you for advanced standing\n  * **International Baccalaureate (IB) diploma:** 33 overall, 5 HL or 6 SL math\n    * one math (Applications and Interpretations HL, Analysis and Approaches HL or Analysis and Approaches SL)\n  * **International Baccalaureate Career-related Programme (CP):** 33 overall, 5 HL or 6 SL math\n    * [Additional Career-related Programme (CP) course requirements](https://www.concordia.ca/admissions/undergraduate/requirements/international.html#ib-cp \"https://www.concordia.ca/admissions/undergraduate/requirements/international.html#ib-cp\")\n  * **Baccalaureate fran\u00c3\u00a7ais** : 15 overall, 15 math\n    * Required courses:\n      * _Premi\u00c3\u00a8re: Sp\u00c3\u00a9cialit\u00c3\u00a9 math\u00c3\u00a9matiques_\n      * _Terminale: Sp\u00c3\u00a9cialit\u00c3\u00a9 math\u00c3\u00a9matiques_\n    * [Additional information for Baccalaur\u00c3\u00a9at fran\u00c3\u00a7ais applicants](/admissions/undergraduate/requirements/international.html)\n  * **British system of education (GCE):**\n    * **A-levels:** At least two A-level exams AB, A in math _**or**_\n    * **AS-levels:** At least 4 AS-level exams with equivalent results _**or**_\n    * **BTEC:** Level 3 Diploma or Extended Diploma in a related subject area with equivalent results\n    * Students without A-level math may be admissible based on AS-level or iGCSE/GCSE/O-Level exam results. Students should include all their exam results from iGCSE (or equivalent) onwards to support their application.\n    * [Additional information for British System of Education (GCE) applicants](/admissions/undergraduate/requirements/international.html#UK)\n  * **University transfers (internal):** 3.0 overall, 3.0 in math, 2.3 in courses offered by the Gina Cody School of Engineering and Computer Science\n    * At least two of the following (or equivalent): MATH 203, 204, 205\n  * **University transfers (external):** A- overall, A- in math\n    * Courses in the disciplines of Calculus and Linear Algebra\n\n* * *\n\n[ You must meet Concordia's minimum admission requirements\n](/admissions/undergraduate/requirements.html)\n\n* * *\n\nMinimum cut-off averages should be used as indicators. The cut-off data may\nchange depending on the applicant pool. Applicants who meet the stated minimum\nrequirements are not guaranteed admission to these programs.\n\n* * *\n\n## Application deadlines\n\n### It\u00e2\u0080\u0099s not too late to apply\n\nMost undergraduate programs are still accepting applications for fall 2025.\n\n[ Check program availability\n](/admissions/undergraduate/programs/availability.html)\n\n* * *\n\n#### **FALL ENTRY (September)**\n\nDeadline: **March 1**  \n**International applicants:** Apply **no later than February 1** to allow time\nfor immigration document processing. However, applying **earlier is strongly\nrecommended**. Immigration processing times vary by country, and delays could\nprevent you from starting your studies on time.\n\n#### **WINTER ENTRY (January)**\n\nDeadline: **November 1**  \n**International applicants:** Apply **no later than August 1** to allow time\nfor immigration document processing. However, applying **earlier is strongly\nrecommended**. Immigration processing times vary by country, and delays could\nprevent you from starting your studies on time.\n\n* * *\n\n_We reserve the right to close admission to a program at any time after the\nofficial deadline without prior notice._\n\n* * *\n\n## Funding note\n\n**Quebec residents** who enroll in certain programs and meet the eligibility\ncriteria may apply for funding of $2,500 per term through the Quebec\nPerspective Bursary (Bourse Perspective Quebec).\n\n[ See eligibility ](/students/financial/scholarships-funding/perspective-\nquebec.html)\n\n**United States students** : A U.S. Federal Student Aid-eligible version of\nthis program is offered. This version meets all U.S. regulations (such as no\nco-operative education or e-courses) for eligible programs.\n\n[ Get the full details about U.S. loan eligibility and requirements\n](/students/financial/loans/us/federal-direct.html)\n\n* * *\n\n## After your degree\n\nGiven the range of applications in use today, computer science alumni have\nestablished careers in a range of sectors including**** health care,\ncommunications, manufacturing, banking, retail, electronics and entertainment.\n\n[ Learn more about career options in Computer Science\n](/students/success/career-planning/paths/computer-science-software-\nengineering.html)\n\n## Student story\n\n### Ghazal Zamani\n\nBachelor of Computer Science\n\nHow software developer Ghazal Zamani found her passion as a student.\n\n[Meet Ghazal](/content/shared/en/profiles/students/undergraduate/ghazal-\nzamani.html?c=/admissions/undergraduate)\n\n[ Check out more student stories ](/admissions/student-profiles.html)\n\n## Other programs of interest\n\n###\n\nComputer Engineering (BEng)\n\n  * Co-op\n  * Internship\n\nWithout computer hardware there would be no smart phones, DVD players and\ndigital recorders or computerized medical devices. As a computer engineer,\nyour knowledge of computer architecture, digital electronics, circuits and\ndigital communication will lead to new innovations or bring about another\ninformation revolution.\n\nDepartment\n\n[Department of Electrical and Computer Engineering](/ginacody/electrical-\ncomputer-eng.html)\n\nFaculty\n\n[Gina Cody School of Engineering and Computer Science](/ginacody.html)\n\n[View program details](/academics/undergraduate/computer-engineering.html\n\"Computer Engineering \\(BEng\\)\")\n\n",
                    "subpages": {}
                },
                "https://www.concordia.ca/academics/undergraduate/computer-science.html#requirements": {
                    "url": "https://www.concordia.ca/academics/undergraduate/computer-science.html#requirements",
                    "title": "Computer Science Degree Program (BCompSc) | Our Core CompSci Degree at Concordia | Undergraduate Admissions - Apply Here  - Concordia University",
                    "meta_description": "",
                    "content": "# Computer Science (BCompSc)\n\n[Apply now](/admissions/undergraduate/apply-now.html)\n\nDegree\n\nBachelor of Computer Science (BCompSc)\n\nDepartment\n\n[Computer Science and Software Engineering](/ginacody/computer-science-\nsoftware-eng.html)\n\nFaculty\n\n[Gina Cody School of Engineering and Computer Science](/ginacody.html)\n\n  * Program overview\n  * Program structure\n  * Admission criteria\n  * After your degree\n\nDuration\n\n3 to 4 years\n\nPrimary campus\n\nSir George Williams (SGW)\n\nExperiential learning\n\nCo-op\n\nStart term\n\nFall, Winter\n\n  * Program overview\n  * Program structure\n  * Admission criteria\n  * After your degree\n\n## Virtual information sessions\n\nWant to know how we're training the next generation of engineers and computer\nscientists? Join us to learn about the Gina Cody School's undergraduate\nprograms and plans to advance integrated technologies in a socially\nresponsible manner.\n\n[ Register to an upcoming info session\n](https://go.concordia.ca/events/upcoming-events-\nlist/?event=GCS%20UnderGraduate%20Info%20Sessions)\n\n## Why study Computer Science?\n\nComputer science uses theoretical and mathematical foundations of computation\nto understand both software and hardware structure for effective and creative\ndesign.\n\nOur state-of-the-art labs for high-performance computing, networks and\nartificial intelligence will give you experience with the equipment you\u00e2\u0080\u0099ll\nuse in the field. Through labs, lectures and projects, you\u00e2\u0080\u0099ll also:\n\n  * Design and create new software, and modify and test existing software used in a broad range of businesses and industries\n  * Develop new or improve existing algorithms\n  * Explore emerging software/hardware technologies\n\n## Program highlights\n\n  * The student-run Software Engineering and Computer Science Student Society (SCS) organizes coding nights, algorithm practice, tutorials, social events, and networking opportunities.\n\n## Special funding for out-of-province students\n\nUp to **$4000** for undergraduate programs.  \n\n[Undergraduate applicants](/students/financial/scholarships-funding/out-of-\nprovince-awards.html)\n\n## Program structure\n\nA Bachelor of Computer Science degree takes a minimum of three or four years\n(90 \u00e2\u0080\u0093 120 credits) of full-time study, [depending on your academic\nbackground](/academics/degrees/program-length.html).\n\nThe core provides a basic and broad study of theory, mathematical basics,\nprogramming methodology, computer architecture, data structures, operating\nsystems, and software engineering.\n\n* * *\n\n### Program options\n\nNew students apply for admission to the Bachelor of Computer Science degree.\nOnce you have completed 30 credits, you may apply to the [Honours\nprogram](/ginacody/computer-science-software-eng/programs/computer-\nscience/bachelor/bcompsc-honours.html \"Original URL:\nhttps://www.concordia.ca/ginacody/computer-science-software-\neng/programs/computer-science/bachelor/bcompsc-honours.html. Click or tap if\nyou trust this link.\").\n\n[ Read more about the Computer Science program in the Undergraduate Calendar\n](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-\nengineering-and-computer-science/section-71-70-department-of-computer-science-\nand-software-engineering.html)\n\n* * *\n\n### Courses\n\n[ See full curriculum details in the Undergraduate Calendar\n](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-\nengineering-and-computer-science/section-71-70-department-of-computer-science-\nand-software-engineering.html)\n\n* * *\n\n**Core courses**\n\n  * Computer science core\n  * Complementary core\n\n* * *\n\n**Electives**\n\n  * Computer science electives\n  * Mathematics electives\n  * Minor and general electives  \n\n* * *\n\n[ See the complete list of courses in the Undergraduate Calendar\n](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-\nengineering-and-computer-science/section-71-70-department-of-computer-science-\nand-software-engineering/section-71-70-10-computer-science-and-software-\nengineering-courses.html)\n\n* * *\n\n**Course sequences**\n\n[ See the course sequences for the General Program ](/ginacody/computer-\nscience-software-eng/programs/computer-science/bachelor/bcompsc-\ngeneral/course-sequences.html)\n\n* * *\n\n### Co-op program\n\nThe Co-op program gives you the chance to complete **paid work terms** that\nlast 12 to 16 weeks. As a Co-op student, you will assist in projects designed\nand implemented by professionals and may also:\n\n  * Develop new or improve existing algorithms\n  * Participate in software quality assurance, programming, debugging and testing\n  * Prepare project proposals, specifications and software testing plans\n\nCo-op students have completed work terms for employers such as McKesson Canada\nand NeuroRx Research.\n\n[ Learn more about the Co-op program ](/ginacody/programs/co-op.html)\n\n## Admission criteria\n\n### Minimum cut-off averages and course requirements for admission\n\n  * **Quebec CEGEP:** 27 overall, 26 math\n    * Admission is based on applicants\u00e2\u0080\u0099 overall Math CRC indicated above and completion of the following classes as part of their DEC: Calculus 1 and Calculus 2 and Linear Algebra\n    * Students completing one of the **eligible technical DECs** may qualify for admission without the listed prerequisites. However, if the prerequisites are taken, a minimum of 26 in math is required.  \n\n      * Eligible technical DECs include 420.A0/BO/AA\n      * [Advanced standing](/admissions/undergraduate/requirements/cegep-students/partnerships.html#gcs) may be possible\n    * [Additional information for CEGEP applicants](/admissions/undergraduate/requirements/cegep-students.html)\n  * **High School** : A- overall, A- math\n    * One math from Pre-Calculus, Calculus, or equivalent\n    * [Canadian curricula course requirements](/admissions/undergraduate/requirements/canada.html) __\n    * [Accepted international qualifications](/admissions/undergraduate/requirements/international.html) __\n    * ACT or SAT is **not** required\n    * AP exams are **not** required but may qualify you for advanced standing\n  * **International Baccalaureate (IB) diploma:** 33 overall, 5 HL or 6 SL math\n    * one math (Applications and Interpretations HL, Analysis and Approaches HL or Analysis and Approaches SL)\n  * **International Baccalaureate Career-related Programme (CP):** 33 overall, 5 HL or 6 SL math\n    * [Additional Career-related Programme (CP) course requirements](https://www.concordia.ca/admissions/undergraduate/requirements/international.html#ib-cp \"https://www.concordia.ca/admissions/undergraduate/requirements/international.html#ib-cp\")\n  * **Baccalaureate fran\u00c3\u00a7ais** : 15 overall, 15 math\n    * Required courses:\n      * _Premi\u00c3\u00a8re: Sp\u00c3\u00a9cialit\u00c3\u00a9 math\u00c3\u00a9matiques_\n      * _Terminale: Sp\u00c3\u00a9cialit\u00c3\u00a9 math\u00c3\u00a9matiques_\n    * [Additional information for Baccalaur\u00c3\u00a9at fran\u00c3\u00a7ais applicants](/admissions/undergraduate/requirements/international.html)\n  * **British system of education (GCE):**\n    * **A-levels:** At least two A-level exams AB, A in math _**or**_\n    * **AS-levels:** At least 4 AS-level exams with equivalent results _**or**_\n    * **BTEC:** Level 3 Diploma or Extended Diploma in a related subject area with equivalent results\n    * Students without A-level math may be admissible based on AS-level or iGCSE/GCSE/O-Level exam results. Students should include all their exam results from iGCSE (or equivalent) onwards to support their application.\n    * [Additional information for British System of Education (GCE) applicants](/admissions/undergraduate/requirements/international.html#UK)\n  * **University transfers (internal):** 3.0 overall, 3.0 in math, 2.3 in courses offered by the Gina Cody School of Engineering and Computer Science\n    * At least two of the following (or equivalent): MATH 203, 204, 205\n  * **University transfers (external):** A- overall, A- in math\n    * Courses in the disciplines of Calculus and Linear Algebra\n\n* * *\n\n[ You must meet Concordia's minimum admission requirements\n](/admissions/undergraduate/requirements.html)\n\n* * *\n\nMinimum cut-off averages should be used as indicators. The cut-off data may\nchange depending on the applicant pool. Applicants who meet the stated minimum\nrequirements are not guaranteed admission to these programs.\n\n* * *\n\n## Application deadlines\n\n### It\u00e2\u0080\u0099s not too late to apply\n\nMost undergraduate programs are still accepting applications for fall 2025.\n\n[ Check program availability\n](/admissions/undergraduate/programs/availability.html)\n\n* * *\n\n#### **FALL ENTRY (September)**\n\nDeadline: **March 1**  \n**International applicants:** Apply **no later than February 1** to allow time\nfor immigration document processing. However, applying **earlier is strongly\nrecommended**. Immigration processing times vary by country, and delays could\nprevent you from starting your studies on time.\n\n#### **WINTER ENTRY (January)**\n\nDeadline: **November 1**  \n**International applicants:** Apply **no later than August 1** to allow time\nfor immigration document processing. However, applying **earlier is strongly\nrecommended**. Immigration processing times vary by country, and delays could\nprevent you from starting your studies on time.\n\n* * *\n\n_We reserve the right to close admission to a program at any time after the\nofficial deadline without prior notice._\n\n* * *\n\n## Funding note\n\n**Quebec residents** who enroll in certain programs and meet the eligibility\ncriteria may apply for funding of $2,500 per term through the Quebec\nPerspective Bursary (Bourse Perspective Quebec).\n\n[ See eligibility ](/students/financial/scholarships-funding/perspective-\nquebec.html)\n\n**United States students** : A U.S. Federal Student Aid-eligible version of\nthis program is offered. This version meets all U.S. regulations (such as no\nco-operative education or e-courses) for eligible programs.\n\n[ Get the full details about U.S. loan eligibility and requirements\n](/students/financial/loans/us/federal-direct.html)\n\n* * *\n\n## After your degree\n\nGiven the range of applications in use today, computer science alumni have\nestablished careers in a range of sectors including**** health care,\ncommunications, manufacturing, banking, retail, electronics and entertainment.\n\n[ Learn more about career options in Computer Science\n](/students/success/career-planning/paths/computer-science-software-\nengineering.html)\n\n## Student story\n\n### Ghazal Zamani\n\nBachelor of Computer Science\n\nHow software developer Ghazal Zamani found her passion as a student.\n\n[Meet Ghazal](/content/shared/en/profiles/students/undergraduate/ghazal-\nzamani.html?c=/admissions/undergraduate)\n\n[ Check out more student stories ](/admissions/student-profiles.html)\n\n## Other programs of interest\n\n###\n\nComputer Engineering (BEng)\n\n  * Co-op\n  * Internship\n\nWithout computer hardware there would be no smart phones, DVD players and\ndigital recorders or computerized medical devices. As a computer engineer,\nyour knowledge of computer architecture, digital electronics, circuits and\ndigital communication will lead to new innovations or bring about another\ninformation revolution.\n\nDepartment\n\n[Department of Electrical and Computer Engineering](/ginacody/electrical-\ncomputer-eng.html)\n\nFaculty\n\n[Gina Cody School of Engineering and Computer Science](/ginacody.html)\n\n[View program details](/academics/undergraduate/computer-engineering.html\n\"Computer Engineering \\(BEng\\)\")\n\n",
                    "subpages": {}
                },
                "https://www.concordia.ca/academics/undergraduate/computer-science.html#after": {
                    "url": "https://www.concordia.ca/academics/undergraduate/computer-science.html#after",
                    "title": "Computer Science Degree Program (BCompSc) | Our Core CompSci Degree at Concordia | Undergraduate Admissions - Apply Here  - Concordia University",
                    "meta_description": "",
                    "content": "# Computer Science (BCompSc)\n\n[Apply now](/admissions/undergraduate/apply-now.html)\n\nDegree\n\nBachelor of Computer Science (BCompSc)\n\nDepartment\n\n[Computer Science and Software Engineering](/ginacody/computer-science-\nsoftware-eng.html)\n\nFaculty\n\n[Gina Cody School of Engineering and Computer Science](/ginacody.html)\n\n  * Program overview\n  * Program structure\n  * Admission criteria\n  * After your degree\n\nDuration\n\n3 to 4 years\n\nPrimary campus\n\nSir George Williams (SGW)\n\nExperiential learning\n\nCo-op\n\nStart term\n\nFall, Winter\n\n  * Program overview\n  * Program structure\n  * Admission criteria\n  * After your degree\n\n## Virtual information sessions\n\nWant to know how we're training the next generation of engineers and computer\nscientists? Join us to learn about the Gina Cody School's undergraduate\nprograms and plans to advance integrated technologies in a socially\nresponsible manner.\n\n[ Register to an upcoming info session\n](https://go.concordia.ca/events/upcoming-events-\nlist/?event=GCS%20UnderGraduate%20Info%20Sessions)\n\n## Why study Computer Science?\n\nComputer science uses theoretical and mathematical foundations of computation\nto understand both software and hardware structure for effective and creative\ndesign.\n\nOur state-of-the-art labs for high-performance computing, networks and\nartificial intelligence will give you experience with the equipment you\u00e2\u0080\u0099ll\nuse in the field. Through labs, lectures and projects, you\u00e2\u0080\u0099ll also:\n\n  * Design and create new software, and modify and test existing software used in a broad range of businesses and industries\n  * Develop new or improve existing algorithms\n  * Explore emerging software/hardware technologies\n\n## Program highlights\n\n  * The student-run Software Engineering and Computer Science Student Society (SCS) organizes coding nights, algorithm practice, tutorials, social events, and networking opportunities.\n\n## Special funding for out-of-province students\n\nUp to **$4000** for undergraduate programs.  \n\n[Undergraduate applicants](/students/financial/scholarships-funding/out-of-\nprovince-awards.html)\n\n## Program structure\n\nA Bachelor of Computer Science degree takes a minimum of three or four years\n(90 \u00e2\u0080\u0093 120 credits) of full-time study, [depending on your academic\nbackground](/academics/degrees/program-length.html).\n\nThe core provides a basic and broad study of theory, mathematical basics,\nprogramming methodology, computer architecture, data structures, operating\nsystems, and software engineering.\n\n* * *\n\n### Program options\n\nNew students apply for admission to the Bachelor of Computer Science degree.\nOnce you have completed 30 credits, you may apply to the [Honours\nprogram](/ginacody/computer-science-software-eng/programs/computer-\nscience/bachelor/bcompsc-honours.html \"Original URL:\nhttps://www.concordia.ca/ginacody/computer-science-software-\neng/programs/computer-science/bachelor/bcompsc-honours.html. Click or tap if\nyou trust this link.\").\n\n[ Read more about the Computer Science program in the Undergraduate Calendar\n](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-\nengineering-and-computer-science/section-71-70-department-of-computer-science-\nand-software-engineering.html)\n\n* * *\n\n### Courses\n\n[ See full curriculum details in the Undergraduate Calendar\n](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-\nengineering-and-computer-science/section-71-70-department-of-computer-science-\nand-software-engineering.html)\n\n* * *\n\n**Core courses**\n\n  * Computer science core\n  * Complementary core\n\n* * *\n\n**Electives**\n\n  * Computer science electives\n  * Mathematics electives\n  * Minor and general electives  \n\n* * *\n\n[ See the complete list of courses in the Undergraduate Calendar\n](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-\nengineering-and-computer-science/section-71-70-department-of-computer-science-\nand-software-engineering/section-71-70-10-computer-science-and-software-\nengineering-courses.html)\n\n* * *\n\n**Course sequences**\n\n[ See the course sequences for the General Program ](/ginacody/computer-\nscience-software-eng/programs/computer-science/bachelor/bcompsc-\ngeneral/course-sequences.html)\n\n* * *\n\n### Co-op program\n\nThe Co-op program gives you the chance to complete **paid work terms** that\nlast 12 to 16 weeks. As a Co-op student, you will assist in projects designed\nand implemented by professionals and may also:\n\n  * Develop new or improve existing algorithms\n  * Participate in software quality assurance, programming, debugging and testing\n  * Prepare project proposals, specifications and software testing plans\n\nCo-op students have completed work terms for employers such as McKesson Canada\nand NeuroRx Research.\n\n[ Learn more about the Co-op program ](/ginacody/programs/co-op.html)\n\n## Admission criteria\n\n### Minimum cut-off averages and course requirements for admission\n\n  * **Quebec CEGEP:** 27 overall, 26 math\n    * Admission is based on applicants\u00e2\u0080\u0099 overall Math CRC indicated above and completion of the following classes as part of their DEC: Calculus 1 and Calculus 2 and Linear Algebra\n    * Students completing one of the **eligible technical DECs** may qualify for admission without the listed prerequisites. However, if the prerequisites are taken, a minimum of 26 in math is required.  \n\n      * Eligible technical DECs include 420.A0/BO/AA\n      * [Advanced standing](/admissions/undergraduate/requirements/cegep-students/partnerships.html#gcs) may be possible\n    * [Additional information for CEGEP applicants](/admissions/undergraduate/requirements/cegep-students.html)\n  * **High School** : A- overall, A- math\n    * One math from Pre-Calculus, Calculus, or equivalent\n    * [Canadian curricula course requirements](/admissions/undergraduate/requirements/canada.html) __\n    * [Accepted international qualifications](/admissions/undergraduate/requirements/international.html) __\n    * ACT or SAT is **not** required\n    * AP exams are **not** required but may qualify you for advanced standing\n  * **International Baccalaureate (IB) diploma:** 33 overall, 5 HL or 6 SL math\n    * one math (Applications and Interpretations HL, Analysis and Approaches HL or Analysis and Approaches SL)\n  * **International Baccalaureate Career-related Programme (CP):** 33 overall, 5 HL or 6 SL math\n    * [Additional Career-related Programme (CP) course requirements](https://www.concordia.ca/admissions/undergraduate/requirements/international.html#ib-cp \"https://www.concordia.ca/admissions/undergraduate/requirements/international.html#ib-cp\")\n  * **Baccalaureate fran\u00c3\u00a7ais** : 15 overall, 15 math\n    * Required courses:\n      * _Premi\u00c3\u00a8re: Sp\u00c3\u00a9cialit\u00c3\u00a9 math\u00c3\u00a9matiques_\n      * _Terminale: Sp\u00c3\u00a9cialit\u00c3\u00a9 math\u00c3\u00a9matiques_\n    * [Additional information for Baccalaur\u00c3\u00a9at fran\u00c3\u00a7ais applicants](/admissions/undergraduate/requirements/international.html)\n  * **British system of education (GCE):**\n    * **A-levels:** At least two A-level exams AB, A in math _**or**_\n    * **AS-levels:** At least 4 AS-level exams with equivalent results _**or**_\n    * **BTEC:** Level 3 Diploma or Extended Diploma in a related subject area with equivalent results\n    * Students without A-level math may be admissible based on AS-level or iGCSE/GCSE/O-Level exam results. Students should include all their exam results from iGCSE (or equivalent) onwards to support their application.\n    * [Additional information for British System of Education (GCE) applicants](/admissions/undergraduate/requirements/international.html#UK)\n  * **University transfers (internal):** 3.0 overall, 3.0 in math, 2.3 in courses offered by the Gina Cody School of Engineering and Computer Science\n    * At least two of the following (or equivalent): MATH 203, 204, 205\n  * **University transfers (external):** A- overall, A- in math\n    * Courses in the disciplines of Calculus and Linear Algebra\n\n* * *\n\n[ You must meet Concordia's minimum admission requirements\n](/admissions/undergraduate/requirements.html)\n\n* * *\n\nMinimum cut-off averages should be used as indicators. The cut-off data may\nchange depending on the applicant pool. Applicants who meet the stated minimum\nrequirements are not guaranteed admission to these programs.\n\n* * *\n\n## Application deadlines\n\n### It\u00e2\u0080\u0099s not too late to apply\n\nMost undergraduate programs are still accepting applications for fall 2025.\n\n[ Check program availability\n](/admissions/undergraduate/programs/availability.html)\n\n* * *\n\n#### **FALL ENTRY (September)**\n\nDeadline: **March 1**  \n**International applicants:** Apply **no later than February 1** to allow time\nfor immigration document processing. However, applying **earlier is strongly\nrecommended**. Immigration processing times vary by country, and delays could\nprevent you from starting your studies on time.\n\n#### **WINTER ENTRY (January)**\n\nDeadline: **November 1**  \n**International applicants:** Apply **no later than August 1** to allow time\nfor immigration document processing. However, applying **earlier is strongly\nrecommended**. Immigration processing times vary by country, and delays could\nprevent you from starting your studies on time.\n\n* * *\n\n_We reserve the right to close admission to a program at any time after the\nofficial deadline without prior notice._\n\n* * *\n\n## Funding note\n\n**Quebec residents** who enroll in certain programs and meet the eligibility\ncriteria may apply for funding of $2,500 per term through the Quebec\nPerspective Bursary (Bourse Perspective Quebec).\n\n[ See eligibility ](/students/financial/scholarships-funding/perspective-\nquebec.html)\n\n**United States students** : A U.S. Federal Student Aid-eligible version of\nthis program is offered. This version meets all U.S. regulations (such as no\nco-operative education or e-courses) for eligible programs.\n\n[ Get the full details about U.S. loan eligibility and requirements\n](/students/financial/loans/us/federal-direct.html)\n\n* * *\n\n## After your degree\n\nGiven the range of applications in use today, computer science alumni have\nestablished careers in a range of sectors including**** health care,\ncommunications, manufacturing, banking, retail, electronics and entertainment.\n\n[ Learn more about career options in Computer Science\n](/students/success/career-planning/paths/computer-science-software-\nengineering.html)\n\n## Student story\n\n### Ghazal Zamani\n\nBachelor of Computer Science\n\nHow software developer Ghazal Zamani found her passion as a student.\n\n[Meet Ghazal](/content/shared/en/profiles/students/undergraduate/ghazal-\nzamani.html?c=/admissions/undergraduate)\n\n[ Check out more student stories ](/admissions/student-profiles.html)\n\n## Other programs of interest\n\n###\n\nComputer Engineering (BEng)\n\n  * Co-op\n  * Internship\n\nWithout computer hardware there would be no smart phones, DVD players and\ndigital recorders or computerized medical devices. As a computer engineer,\nyour knowledge of computer architecture, digital electronics, circuits and\ndigital communication will lead to new innovations or bring about another\ninformation revolution.\n\nDepartment\n\n[Department of Electrical and Computer Engineering](/ginacody/electrical-\ncomputer-eng.html)\n\nFaculty\n\n[Gina Cody School of Engineering and Computer Science](/ginacody.html)\n\n[View program details](/academics/undergraduate/computer-engineering.html\n\"Computer Engineering \\(BEng\\)\")\n\n",
                    "subpages": {}
                },
                "https://www.concordia.ca/ginacody/computer-science-software-eng/programs/computer-science/bachelor/bcompsc-honours.html": {
                    "url": "https://www.concordia.ca/ginacody/computer-science-software-eng/programs/computer-science/bachelor/bcompsc-honours.html",
                    "title": "Honours program - Concordia University",
                    "meta_description": "",
                    "content": "# Honours program\n\nThe Honours Program requires completion of:\n\n  * completion of 60 or more credits in a discipline\n  * superior performance required to enter and remain in the program. \n\nIn their first year, students may register in Honours program courses, but\nacceptance as Honours students will depend entirely on academic performance.\n\nAn honours program is available in each computer science option for students\nin the BCompSci.\n\n### Minimum requirements for remaining in the Honours programs\n\nStudents should refer to the [Undergraduate\nCalendar](/academics/undergraduate/calendar/current/section-16-academic-\ninformation-definitions-and-regulations.html) for academic regulations for the\nhonours program.\n\n### Additional requirements for the Honours BCompSc program\n\nThere are additional requirements for the Honours BCompSc program. Students\nshould refer to the [Undergraduate\nCalendar](/academics/undergraduate/calendar/current/section-71-gina-cody-\nschool-of-engineering-and-computer-science/section-71-70-department-of-\ncomputer-science-and-software-engineering.html) for academic regulations for\nthe BCompSc honours program.\n\n  * [Computer Science](/ginacody/computer-science-software-eng/programs/computer-science.html)\n    * [Bachelor program in Computer Science (BCompSc)](/ginacody/computer-science-software-eng/programs/computer-science/bachelor.html)\n      * [Computer Science (BCompSc)](/ginacody/computer-science-software-eng/programs/computer-science/bachelor/bcompsc-general.html)\n      * [BCompSc Data Science](/ginacody/computer-science-software-eng/programs/computer-science/bachelor/bcompsc-data-science.html)\n      * [BCompSc Computation Arts and Computer Science Joint Major](/ginacody/computer-science-software-eng/programs/computer-science/bachelor/bcompsc-computer-applications-computation-arts.html)\n      * [Computer Science (minor)](/ginacody/computer-science-software-eng/programs/computer-science/bachelor/compsc-minor.html)\n      * [Honours program](/ginacody/computer-science-software-eng/programs/computer-science/bachelor/bcompsc-honours.html)\n      * [BCompSc Health and Life Sciences](/ginacody/computer-science-software-eng/programs/computer-science/bachelor/bcompsc-health-life-sciences.html)\n    * [Computer Science (MApCompSc)](/ginacody/computer-science-software-eng/programs/computer-science/mapcompsc.html)\n    * [Computer Science (MCompSc)](/ginacody/computer-science-software-eng/programs/computer-science/mcompsc.html)\n    * [Computer Science (PhD)](/ginacody/computer-science-software-eng/programs/computer-science/doctorate.html)\n    * [Diploma in Computer Science (GrDip)](/ginacody/computer-science-software-eng/programs/computer-science/diploma.html)\n\n",
                    "subpages": {}
                },
                "https://www.concordia.ca/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-engineering-and-computer-science/section-71-70-department-of-computer-science-and-software-engineering.html": {
                    "url": "https://www.concordia.ca/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-engineering-and-computer-science/section-71-70-department-of-computer-science-and-software-engineering.html",
                    "title": "Section 71.70  Department of Computer Science and Software Engineering - Concordia University",
                    "meta_description": "",
                    "content": "# Section 71.70 Department of Computer Science and Software Engineering\n\n  * [Department of Computer Science and Software Engineering](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-engineering-and-computer-science/section-71-70-department-of-computer-science-and-software-engineering/department-of-computer-science-and-software-engineering.html \"Department of Computer Science and Software Engineering\")\n  * [Section 71.70.1 Curriculum for the Degree of Bachelor of/Baccalaureate in Computer Science](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-engineering-and-computer-science/section-71-70-department-of-computer-science-and-software-engineering/section-71-70-1-curriculum-for-the-degree-of-bachelor-of-baccalaureate-in-computer-science.html \"Section 71.70.1 Curriculum for the Degree of Bachelor of/Baccalaureate in Computer Science\")\n  * [Section 71.70.2 Degree Requirements (BCompSc)](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-engineering-and-computer-science/section-71-70-department-of-computer-science-and-software-engineering/section-71-70-2-degree-requirements-bcompsc-.html \"Section 71.70.2 Degree Requirements \\(BCompSc\\)\")\n  * [Section 71.70.3 Extended Credit Program](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-engineering-and-computer-science/section-71-70-department-of-computer-science-and-software-engineering/section-71-70-3-extended-credit-program.html \"Section 71.70.3 Extended Credit Program\")\n  * [Section 71.70.4 Honours Program](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-engineering-and-computer-science/section-71-70-department-of-computer-science-and-software-engineering/section-71-70-4-honours-program.html \"Section 71.70.4 Honours Program\")\n  * [Section 71.70.5 Minor in Computer Science](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-engineering-and-computer-science/section-71-70-department-of-computer-science-and-software-engineering/section-71-70-5-minor-in-computer-science.html \"Section 71.70.5 Minor in Computer Science\")\n  * [Section 71.70.6 Programs Related to Computer Science](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-engineering-and-computer-science/section-71-70-department-of-computer-science-and-software-engineering/section-71-70-6-programs-related-to-computer-science.html \"Section 71.70.6 Programs Related to Computer Science\")\n  * [Section 71.70.7 C.Edge (Career Edge) Option and Reflective Learning Courses](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-engineering-and-computer-science/section-71-70-department-of-computer-science-and-software-engineering/section-71-70-7-c-edge-career-edge-option-and-reflective-learning-courses.html \"Section 71.70.7 C.Edge \\(Career Edge\\) Option and Reflective Learning Courses\")\n  * [Section 71.70.8 Curriculum for the Degree of BEng in Software Engineering](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-engineering-and-computer-science/section-71-70-department-of-computer-science-and-software-engineering/section-71-70-8-curriculum-for-the-degree-of-beng-in-software-engineering.html \"Section 71.70.8 Curriculum for the Degree of BEng in Software Engineering\")\n  * [Section 71.70.9 Degree Requirements for the BEng in Software Engineering](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-engineering-and-computer-science/section-71-70-department-of-computer-science-and-software-engineering/section-71-70-9-degree-requirements-for-the-beng-in-software-engineering.html \"Section 71.70.9 Degree Requirements for the BEng in Software Engineering\")\n  * [Section 71.70.10 Computer Science and Software Engineering Courses](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-engineering-and-computer-science/section-71-70-department-of-computer-science-and-software-engineering/section-71-70-10-computer-science-and-software-engineering-courses.html \"Section 71.70.10 Computer Science and Software Engineering Courses\")\n\n  * [Section 71 Gina Cody School of Engineering and Computer Science](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-engineering-and-computer-science.html)\n    * [Section 71.10 Gina Cody School of Engineering and Computer Science](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-engineering-and-computer-science/section-71-10-gina-cody-school-of-engineering-and-computer-science.html)\n    * [Section 71.20 BEng](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-engineering-and-computer-science/section-71-20-beng.html)\n      * [Section 71.20.1 Curriculum for the Degree of BEng](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-engineering-and-computer-science/section-71-20-beng/section-71-20-1-curriculum-for-the-degree-of-beng.html)\n      * [Section 71.20.2 Alternative Entry Programs](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-engineering-and-computer-science/section-71-20-beng/section-71-20-2-alternative-entry-programs.html)\n      * [Section 71.20.3 Accreditation by the Canadian Council of Professional Engineers](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-engineering-and-computer-science/section-71-20-beng/section-71-20-3-accreditation-by-the-canadian-council-of-professional-engineers.html)\n      * [Section 71.20.4 Membership in the Ordre des ing\u00c3\u00a9nieurs du Qu\u00c3\u00a9bec](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-engineering-and-computer-science/section-71-20-beng/section-71-20-4-membership-in-the-ordre-des-ingenieurs-du-quebec.html)\n      * [Section 71.20.5 Degree Requirements](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-engineering-and-computer-science/section-71-20-beng/section-71-20-5-degree-requirements.html)\n      * [Section 71.20.6 General Education Elective](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-engineering-and-computer-science/section-71-20-beng/section-71-20-6-general-education-elective.html)\n      * [Section 71.20.7 Writing Skills Requirement](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-engineering-and-computer-science/section-71-20-beng/section-71-20-7-writing-skills-requirement.html)\n      * [Section 71.20.8 C.Edge (Career Edge) and Accelerated Career Experience Options](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-engineering-and-computer-science/section-71-20-beng/section-71-20-8-c-edge-career-edge-and-accelerated-career-experience-options.html)\n      * [Section 71.20.9 Certificate in Science and Technology](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-engineering-and-computer-science/section-71-20-beng/section-71-20-9-certificate-in-science-and-technology.html)\n    * [Section 71.30 Department of Electrical and Computer Engineering](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-engineering-and-computer-science/section-71-30-department-of-electrical-and-computer-engineering.html)\n      * [Department of Electrical and Computer Engineering](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-engineering-and-computer-science/section-71-30-department-of-electrical-and-computer-engineering/department-of-electrical-and-computer-engineering.html)\n      * [Section 71.30.1 Course Requirements (BEng in Electrical Engineering)](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-engineering-and-computer-science/section-71-30-department-of-electrical-and-computer-engineering/section-71-30-1-course-requirements-beng-in-electrical-engineering-.html)\n      * [Section 71.30.2 Course Requirements (BEng in Computer Engineering)](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-engineering-and-computer-science/section-71-30-department-of-electrical-and-computer-engineering/section-71-30-2-course-requirements-beng-in-computer-engineering-.html)\n    * [Section 71.40 Department of Mechanical, Industrial and Aerospace Engineering](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-engineering-and-computer-science/section-71-40-department-of-mechanical-industrial-and-aerospace-engineering.html)\n      * [Department of Mechanical, Industrial and Aerospace Engineering](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-engineering-and-computer-science/section-71-40-department-of-mechanical-industrial-and-aerospace-engineering/department-of-mechanical-industrial-and-aerospace-engineering.html)\n      * [Section 71.40.1 Course Requirements (BEng in Mechanical Engineering)](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-engineering-and-computer-science/section-71-40-department-of-mechanical-industrial-and-aerospace-engineering/section-71-40-1-course-requirements-beng-in-mechanical-engineering-.html)\n      * [Section 71.40.2 Course Requirements (BEng in Industrial Engineering)](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-engineering-and-computer-science/section-71-40-department-of-mechanical-industrial-and-aerospace-engineering/section-71-40-2-course-requirements-beng-in-industrial-engineering-.html)\n    * [Section 71.50 Department of Building, Civil and Environmental Engineering](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-engineering-and-computer-science/section-71-50-department-of-building-civil-and-environmental-engineering.html)\n      * [Building, Civil and Environmental Engineering](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-engineering-and-computer-science/section-71-50-department-of-building-civil-and-environmental-engineering/building-civil-and-environmental-engineering.html)\n      * [Section 71.50.1 Course Requirements (BEng in Building Engineering)](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-engineering-and-computer-science/section-71-50-department-of-building-civil-and-environmental-engineering/section-71-50-1-course-requirements-beng-in-building-engineering-.html)\n      * [Section 71.50.2 Course Requirements (BEng in Civil Engineering)](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-engineering-and-computer-science/section-71-50-department-of-building-civil-and-environmental-engineering/section-71-50-2-course-requirements-beng-in-civil-engineering-.html)\n    * [Section 71.55 Aerospace Engineering](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-engineering-and-computer-science/section-71-55-aerospace-engineering.html)\n      * [Aerospace Engineering](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-engineering-and-computer-science/section-71-55-aerospace-engineering/aerospace-engineering.html)\n      * [Course Requirements (BEng in Aerospace Engineering)](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-engineering-and-computer-science/section-71-55-aerospace-engineering/course-requirements-beng-in-aerospace-engineering-.html)\n    * [Section 71.60 Engineering Course Descriptions](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-engineering-and-computer-science/section-71-60-engineering-course-descriptions.html)\n      * [Engineering and Computer Science Courses](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-engineering-and-computer-science/section-71-60-engineering-course-descriptions/engineering-and-computer-science-courses.html)\n      * [Engineering Courses](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-engineering-and-computer-science/section-71-60-engineering-course-descriptions/engineering-courses.html)\n      * [Aerospace Engineering Courses](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-engineering-and-computer-science/section-71-60-engineering-course-descriptions/aerospace-engineering-courses.html)\n      * [Building, Civil and Environmental Engineering Courses](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-engineering-and-computer-science/section-71-60-engineering-course-descriptions/building-civil-and-environmental-engineering-courses.html)\n      * [Building Engineering Courses](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-engineering-and-computer-science/section-71-60-engineering-course-descriptions/building-engineering-courses.html)\n      * [Chemical and Materials Engineering Courses](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-engineering-and-computer-science/section-71-60-engineering-course-descriptions/chemical-and-materials-engineering-courses.html)\n      * [Civil Engineering Courses](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-engineering-and-computer-science/section-71-60-engineering-course-descriptions/civil-engineering-courses.html)\n      * [Computer Engineering Courses](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-engineering-and-computer-science/section-71-60-engineering-course-descriptions/computer-engineering-courses.html)\n      * [Electrical Engineering Courses](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-engineering-and-computer-science/section-71-60-engineering-course-descriptions/electrical-engineering-courses.html)\n      * [Concordia Institute for Aerospace Design and Innovation Courses](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-engineering-and-computer-science/section-71-60-engineering-course-descriptions/concordia-institute-for-aerospace-design-and-innovation-courses.html)\n      * [Industrial Engineering Courses](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-engineering-and-computer-science/section-71-60-engineering-course-descriptions/industrial-engineering-courses.html)\n      * [Mechanical Engineering Courses](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-engineering-and-computer-science/section-71-60-engineering-course-descriptions/mechanical-engineering-courses.html)\n      * [Mechanical and Industrial Engineering Courses](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-engineering-and-computer-science/section-71-60-engineering-course-descriptions/mechanical-and-industrial-engineering-courses.html)\n    * [Section 71.70 Department of Computer Science and Software Engineering](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-engineering-and-computer-science/section-71-70-department-of-computer-science-and-software-engineering.html)\n      * [Department of Computer Science and Software Engineering](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-engineering-and-computer-science/section-71-70-department-of-computer-science-and-software-engineering/department-of-computer-science-and-software-engineering.html)\n      * [Section 71.70.1 Curriculum for the Degree of Bachelor of/Baccalaureate in Computer Science](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-engineering-and-computer-science/section-71-70-department-of-computer-science-and-software-engineering/section-71-70-1-curriculum-for-the-degree-of-bachelor-of-baccalaureate-in-computer-science.html)\n      * [Section 71.70.2 Degree Requirements (BCompSc)](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-engineering-and-computer-science/section-71-70-department-of-computer-science-and-software-engineering/section-71-70-2-degree-requirements-bcompsc-.html)\n      * [Section 71.70.3 Extended Credit Program](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-engineering-and-computer-science/section-71-70-department-of-computer-science-and-software-engineering/section-71-70-3-extended-credit-program.html)\n      * [Section 71.70.4 Honours Program](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-engineering-and-computer-science/section-71-70-department-of-computer-science-and-software-engineering/section-71-70-4-honours-program.html)\n      * [Section 71.70.5 Minor in Computer Science](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-engineering-and-computer-science/section-71-70-department-of-computer-science-and-software-engineering/section-71-70-5-minor-in-computer-science.html)\n      * [Section 71.70.6 Programs Related to Computer Science](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-engineering-and-computer-science/section-71-70-department-of-computer-science-and-software-engineering/section-71-70-6-programs-related-to-computer-science.html)\n      * [Section 71.70.7 C.Edge (Career Edge) Option and Reflective Learning Courses](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-engineering-and-computer-science/section-71-70-department-of-computer-science-and-software-engineering/section-71-70-7-c-edge-career-edge-option-and-reflective-learning-courses.html)\n      * [Section 71.70.8 Curriculum for the Degree of BEng in Software Engineering](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-engineering-and-computer-science/section-71-70-department-of-computer-science-and-software-engineering/section-71-70-8-curriculum-for-the-degree-of-beng-in-software-engineering.html)\n      * [Section 71.70.9 Degree Requirements for the BEng in Software Engineering](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-engineering-and-computer-science/section-71-70-department-of-computer-science-and-software-engineering/section-71-70-9-degree-requirements-for-the-beng-in-software-engineering.html)\n      * [Section 71.70.10 Computer Science and Software Engineering Courses](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-engineering-and-computer-science/section-71-70-department-of-computer-science-and-software-engineering/section-71-70-10-computer-science-and-software-engineering-courses.html)\n    * [Section 71.75 Computer Science in Health and Life Sciences](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-engineering-and-computer-science/section-71-75-computer-science-in-health-and-life-sciences.html)\n      * [Computer Science in Health and Life Sciences](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-engineering-and-computer-science/section-71-75-computer-science-in-health-and-life-sciences/computer-science-in-health-and-life-sciences.html)\n      * [Section 71.75.1 Curriculum for the Degree of BCompSc in Health and Life Sciences](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-engineering-and-computer-science/section-71-75-computer-science-in-health-and-life-sciences/section-71-75-1-curriculum-for-the-degree-of-bcompsc-in-health-and-life-sciences.html)\n    * [Section 71.80 Computation Arts and Computer Science](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-engineering-and-computer-science/section-71-80-computation-arts-and-computer-science.html)\n      * [Computation Arts and Computer Science](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-engineering-and-computer-science/section-71-80-computation-arts-and-computer-science/computation-arts-and-computer-science.html)\n      * [BCompSc Joint Major in Computation Arts and Computer Science](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-engineering-and-computer-science/section-71-80-computation-arts-and-computer-science/bcompsc-joint-major-in-computation-arts-and-computer-science.html)\n    * [Section 71.85 Data Science](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-engineering-and-computer-science/section-71-85-data-science.html)\n      * [Data Science](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-engineering-and-computer-science/section-71-85-data-science/data-science.html)\n      * [BCompSc Joint Major in Data Science](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-engineering-and-computer-science/section-71-85-data-science/bcompsc-joint-major-in-data-science.html)\n    * [Section 71.90 Centre for Engineering in Society](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-engineering-and-computer-science/section-71-90-centre-for-engineering-in-society.html)\n    * [Section 71.100 Concordia Institute for Information Systems Engineering](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-engineering-and-computer-science/section-71-100-concordia-institute-for-information-systems-engineering.html)\n    * [Section 71.105 Department of Chemical and Materials Engineering](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-engineering-and-computer-science/section-71-105-department-of-chemical-and-materials-engineering.html)\n      * [Department of Chemical and Materials Engineering](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-engineering-and-computer-science/section-71-105-department-of-chemical-and-materials-engineering/department-of-chemical-and-materials-engineering.html)\n      * [Section 71.105.1 Course Requirements (BEng in Chemical Engineering)](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-engineering-and-computer-science/section-71-105-department-of-chemical-and-materials-engineering/section-71-105-1-course-requirements-beng-in-chemical-engineering-.html)\n    * [Section 71.110 Complementary Studies for Engineering and Computer Science Students](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-engineering-and-computer-science/section-71-110-complementary-studies-for-engineering-and-computer-science-students.html)\n\n",
                    "subpages": {}
                },
                "https://www.concordia.ca/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-engineering-and-computer-science/section-71-70-department-of-computer-science-and-software-engineering/section-71-70-10-computer-science-and-software-engineering-courses.html": {
                    "url": "https://www.concordia.ca/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-engineering-and-computer-science/section-71-70-department-of-computer-science-and-software-engineering/section-71-70-10-computer-science-and-software-engineering-courses.html",
                    "title": "Section 71.70.10 Computer Science and Software Engineering Courses - Concordia University",
                    "meta_description": "",
                    "content": "# Section 71.70.10 Computer Science and Software Engineering Courses\n\n## Computer Science Courses\n\n### Notes\n\n  * Students from outside the  [Gina Cody School of Engineering and Computer Science](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-engineering-and-computer-science.html#19018) who are not registered in a Computer Science program may not take more than five COMP courses numbered higher than 212.\n  * Students from outside the  [Gina Cody School of Engineering and Computer Science](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-engineering-and-computer-science.html#19018) who are registered for the \n\n[Minor in Computer\nScience](/academics/undergraduate/calendar/current/section-71-gina-cody-\nschool-of-engineering-and-computer-science/section-71-70-department-of-\ncomputer-science-and-software-engineering/section-71-70-5-minor-in-computer-\nscience.html#12131) may not take more than 30 credits of COMP courses numbered\nhigher than 212.\n\n###\n\nCOMP 108 Computer Science C.Edge Option Reflective Learning I (3 credits)\n\n#### Prerequisite/Corequisite:\n\nPermission of the GCS is required.\n\n#### Description:\n\nThis course is a reflective learning module for students in their related\nfield which is based on their academic requirements and their first C.Edge\nterm.\n\n#### Component(s):\n\nLecture\n\n###\n\nCOMP 208 Computer Science C.Edge Option Reflective Learning II (3 credits)\n\n#### Prerequisite/Corequisite:\n\nThe following course must be completed previously:  [COMP\n108](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-\nengineering-and-computer-science/section-71-70-department-of-computer-science-\nand-software-engineering/section-71-70-10-computer-science-and-software-\nengineering-courses.html#3516). Permission of the GCS is required.\n\n#### Description:\n\nThis course expands on the students\u2019 second C.Edge term in their related field\nof study to further develop their knowledge and work\u00e2\u0080\u0091related skills.\n\n#### Component(s):\n\nLecture\n\n###\n\nCOMP 218 Fundamentals of Programming (3 credits)\n\n#### Prerequisite/Corequisite:\n\nThe following course must be completed previously:  [MATH\n201](/academics/undergraduate/calendar/current/section-31-faculty-of-arts-and-\nscience/section-31-200-department-of-mathematics-and-statistics/mathematics-\nand-statistics-courses.html#2587) or equivalent. No prior experience with\ncomputers is assumed.\n\n#### Description:\n\nComputers and computing: problem solving with computers, basic data types,\nexpressions, assignments, control structures, simple library functions,\nprogrammer\u00e2\u0080\u0091defined functions, arrays of basic types. Basic elements of\nobject\u00e2\u0080\u0091oriented programming: classes, objects and methods.\n\n#### Component(s):\n\nLecture 3 hours per week; Tutorial 1 hour per week\n\n#### Notes:\n\n  \n\n  * This course may not be taken for credit in the regular undergraduate programs in the Gina Cody School of Engineering and Computer Science.\n\n  * Students who have received credit for COMP 248 or COEN 243 may not take this course for credit.\n\n###\n\nCOMP 228 System Hardware (3 credits)\n\n#### Prerequisite/Corequisite:\n\nThe following course must be completed previously:  [COMP\n248](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-\nengineering-and-computer-science/section-71-70-department-of-computer-science-\nand-software-engineering/section-71-70-10-computer-science-and-software-\nengineering-courses.html#3535). The following courses must be completed\npreviously or concurrently: [MATH\n203](/academics/undergraduate/calendar/current/section-31-faculty-of-arts-and-\nscience/section-31-200-department-of-mathematics-and-statistics/mathematics-\nand-statistics-courses.html#2590) or Cegep Mathematics 103 or NYA;  [MATH\n204](/academics/undergraduate/calendar/current/section-31-faculty-of-arts-and-\nscience/section-31-200-department-of-mathematics-and-statistics/mathematics-\nand-statistics-courses.html#2592) or Cegep Mathematics 105 or NYC.\n\n#### Description:\n\nLevels of system abstraction and von Neumann model. Basics of digital logic\ndesign. Data representation and manipulation. Instruction set architecture.\nProcessor internals. Assembly language programming. Memory subsystem and cache\nmanagement. I/O subsystem. Introduction to network organization and\narchitecture.\n\n#### Component(s):\n\nLecture 3 hours per week; Tutorial 2 hours per week\n\n#### Notes:\n\n  \n\n  * Students who have received credit for SOEN 228 may not take this course for credit.\n\n###\n\nCOMP 232 Mathematics for Computer Science (3 credits)\n\n#### Prerequisite/Corequisite:\n\nThe following courses must be completed previously:  [MATH\n203](/academics/undergraduate/calendar/current/section-31-faculty-of-arts-and-\nscience/section-31-200-department-of-mathematics-and-statistics/mathematics-\nand-statistics-courses.html#2590) or Cegep Mathematics 103 or NYA;  [MATH\n204](/academics/undergraduate/calendar/current/section-31-faculty-of-arts-and-\nscience/section-31-200-department-of-mathematics-and-statistics/mathematics-\nand-statistics-courses.html#2592) or Cegep Mathematics 105 or NYC.\n\n#### Description:\n\nSets. Propositional logic and predicate calculus. Functions and relations.\nElements of number theory. Mathematical reasoning. Proof techniques: direct\nproof, indirect proof, proof by contradiction, proof by induction.\n\n#### Component(s):\n\nLecture 3 hours per week; Tutorial 2 hours per week\n\n#### Notes:\n\n  \n\n  * Students who have received credit for COMP 238 or COEN 231 may not take this course for credit.\n\n###\n\nCOMP 233 Probability and Statistics for Computer Science (3 credits)\n\n#### Prerequisite/Corequisite:\n\nThe following course must be completed previously:  [MATH\n205](/academics/undergraduate/calendar/current/section-31-faculty-of-arts-and-\nscience/section-31-200-department-of-mathematics-and-statistics/mathematics-\nand-statistics-courses.html#2594) or Cegep Mathematics 203 or NYB.\n\n#### Description:\n\nCombinatorics. Axioms of probability. Conditional probability. Discrete and\ncontinuous probability distributions. Expectation and moments. Hypothesis\ntesting. Parameter estimation. Correlation and linear regression. Applications\nto computer science.\n\n#### Component(s):\n\nLecture 3 hours per week; Tutorial 2 hours per week\n\n#### Notes:\n\n  \n\n  * Students who have received credit for  [BIOL 322](/academics/undergraduate/calendar/current/section-31-faculty-of-arts-and-science/section-31-030-department-of-biology/biology-courses.html#1520),  [ENGR 371](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-engineering-and-computer-science/section-71-60-engineering-course-descriptions/engineering-courses.html#3548),  [STAT 249](/academics/undergraduate/calendar/current/section-31-faculty-of-arts-and-science/section-31-200-department-of-mathematics-and-statistics/mathematics-and-statistics-courses.html#2684),  [STAT 250](/academics/undergraduate/calendar/current/section-31-faculty-of-arts-and-science/section-31-200-department-of-mathematics-and-statistics/mathematics-and-statistics-courses.html#2685),  [COMM 215](/academics/undergraduate/calendar/current/section-61-john-molson-school-of-business/section-61-35-john-molson-school-of-business-courses.html#3984),  [MAST 221](/academics/undergraduate/calendar/current/section-31-faculty-of-arts-and-science/section-31-200-department-of-mathematics-and-statistics/mathematics-and-statistics-courses.html#2565),  [MAST 333](/academics/undergraduate/calendar/current/section-31-faculty-of-arts-and-science/section-31-200-department-of-mathematics-and-statistics/mathematics-and-statistics-courses.html#2577) may not take this course for credit.\n\n###\n\nCOMP 248 Object\u00e2\u0080\u0091Oriented Programming I (3.5 credits)\n\n#### Prerequisite/Corequisite:\n\nThe following courses must be completed previously or concurrently:  [MATH\n204](/academics/undergraduate/calendar/current/section-31-faculty-of-arts-and-\nscience/section-31-200-department-of-mathematics-and-statistics/mathematics-\nand-statistics-courses.html#2592) or Cegep Mathematics 105 or NYC.\n\n#### Description:\n\nIntroduction to programming. Basic data types, variables, expressions,\nassignments, control flow. Classes, objects, methods. Information hiding,\npublic vs. private visibility, data abstraction and encapsulation. References.\nArrays.\n\n#### Component(s):\n\nLecture 3 hours per week; Tutorial 2 hours per week; Laboratory 1 hour per\nweek\n\n###\n\nCOMP 249 Object\u00e2\u0080\u0091Oriented Programming II (3.5 credits)\n\n#### Prerequisite/Corequisite:\n\nThe following courses must be completed previously:  [COMP\n248](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-\nengineering-and-computer-science/section-71-70-department-of-computer-science-\nand-software-engineering/section-71-70-10-computer-science-and-software-\nengineering-courses.html#3535);  [MATH\n203](/academics/undergraduate/calendar/current/section-31-faculty-of-arts-and-\nscience/section-31-200-department-of-mathematics-and-statistics/mathematics-\nand-statistics-courses.html#2590) or Cegep Mathematics 103 or NYA. The\nfollowing courses must be completed previously or concurrently:  [MATH\n205](/academics/undergraduate/calendar/current/section-31-faculty-of-arts-and-\nscience/section-31-200-department-of-mathematics-and-statistics/mathematics-\nand-statistics-courses.html#2594) or Cegep Mathematics 203 or NYB.\n\n#### Description:\n\nDesign of classes. Inheritance. Polymorphism. Static and dynamic binding.\nAbstract classes. Exception handling. File I/O. Recursion. Interfaces and\ninner classes. Graphical user interfaces. Generics. Collections and iterators.\n\n#### Component(s):\n\nLecture 3 hours per week; Tutorial 2 hours per week; Laboratory 1 hour per\nweek\n\n###\n\nCOMP 326 Computer Architecture (3 credits)\n\n#### Prerequisite/Corequisite:\n\nThe following course must be completed previously:  [COMP\n346](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-\nengineering-and-computer-science/section-71-70-department-of-computer-science-\nand-software-engineering/section-71-70-10-computer-science-and-software-\nengineering-courses.html#3556).\n\n#### Description:\n\nComputer architecture models: control\u00e2\u0080\u0091flow and data\u00e2\u0080\u0091flow. Concurrency and\nlocality, data dependency theory. Instruction level parallelism. Instruction\nscheduling. Pipelined processors. Vector processors. Thread level parallelism.\nMultiprocessors. Shared memory models. Coherence protocols. Interconnection\nnetworks. Performance issues. Advanced topics in contemporary computer\narchitectures.\n\n#### Component(s):\n\nLecture 3 hours per week; Tutorial 1 hour per week\n\n###\n\nCOMP 333 Data Analytics (4 credits)\n\n#### Prerequisite/Corequisite:\n\nThe following courses must be completed previously:  [COMP\n233](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-\nengineering-and-computer-science/section-71-70-department-of-computer-science-\nand-software-engineering/section-71-70-10-computer-science-and-software-\nengineering-courses.html#3532) or  [ENGR\n371](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-\nengineering-and-computer-science/section-71-60-engineering-course-\ndescriptions/engineering-courses.html#3548);  [COMP\n352](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-\nengineering-and-computer-science/section-71-70-department-of-computer-science-\nand-software-engineering/section-71-70-10-computer-science-and-software-\nengineering-courses.html#3565);  [ENCS\n282](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-\nengineering-and-computer-science/section-71-60-engineering-course-\ndescriptions/engineering-and-computer-science-courses.html#3482).\n\n#### Description:\n\nThis course introduces the process of data analytics with the aid of examples\nfrom several disciplines. It covers data wrangling: extract-transform-load\n(ETL), cleaning, structuring, integration; data analytics activities:\ndescription, prescription, modelling, simulation, optimization, storytelling;\nand the Python ecosystem: language, libraries, and Jupyter environment.\n\n#### Component(s):\n\nLecture 3 hours per week; Laboratory 2 hours per week\n\n###\n\nCOMP 335 Introduction to Theoretical Computer Science (3 credits)\n\n#### Prerequisite/Corequisite:\n\nThe following courses must be completed previously: [COMP\n232](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-\nengineering-and-computer-science/section-71-70-department-of-computer-science-\nand-software-engineering/section-71-70-10-computer-science-and-software-\nengineering-courses.html#3529) or  [COEN\n231](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-\nengineering-and-computer-science/section-71-60-engineering-course-\ndescriptions/computer-engineering-courses.html#3841); and  [COMP\n249](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-\nengineering-and-computer-science/section-71-70-department-of-computer-science-\nand-software-engineering/section-71-70-10-computer-science-and-software-\nengineering-courses.html#3538) or  [COEN\n244](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-\nengineering-and-computer-science/section-71-60-engineering-course-\ndescriptions/computer-engineering-courses.html#3843).\n\n#### Description:\n\nThis course covers the following topics: finite state automata and regular\nlanguages; push\u00e2\u0080\u0091down automata and context\u00e2\u0080\u0091free languages; pumping lemmas;\napplications to parsing; Turing machines; undecidability and decidability.\n\n#### Component(s):\n\nLecture 3 hours per week; Tutorial 2 hours per week\n\n###\n\nCOMP 339 Combinatorics (3 credits)\n\n#### Prerequisite/Corequisite:\n\nThe following course must be completed previously:  [COMP\n232](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-\nengineering-and-computer-science/section-71-70-department-of-computer-science-\nand-software-engineering/section-71-70-10-computer-science-and-software-\nengineering-courses.html#3529); or students must complete have completed 18\ncredits in post\u00e2\u0080\u0091Cegep Mathematics prior to enrolling.\n\n#### Description:\n\nGeneral principles of counting, permutations, combinations, identities,\npartitions, generating functions, Fibonacci numbers, Stirling numbers, Catalan\nnumbers, principle of inclusion\u00e2\u0080\u0091exclusion. Graphs, subgraphs, isomorphism,\nEuler graphs, Hamilton paths and cycles, planar graphs, Kuratowski\u2019s Theorem,\ntrees, colouring, 5\u00e2\u0080\u0091colour theorem, matching, Hall\u2019s theorem.\n\n#### Component(s):\n\nLecture; Tutorial\n\n#### Notes:\n\n  \n\n  * Students who have received credit for MATH 339 may not take this course for credit.\n\n###\n\nCOMP 345 Advanced Program Design with C++ (4 credits)\n\n#### Prerequisite/Corequisite:\n\nThe following course must be completed previously or concurrently:  [COMP\n352](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-\nengineering-and-computer-science/section-71-70-department-of-computer-science-\nand-software-engineering/section-71-70-10-computer-science-and-software-\nengineering-courses.html#3565).\n\n#### Description:\n\nIntroduction to C++. I/O with stream classes. Pointers and their uses. The\nStandard Template Library (STL): containers, algorithms, iterators, adaptors,\nfunction objects. Class design: constructors, destructors, operator\noverloading, inheritance, virtual functions, exception handling, memory\nmanagement. Advanced topics: libraries, locales, STL conventions, concurrency,\ntemplate metaprogramming. Applications of C++: systems, engineering, games\nprogramming. Project.\n\n#### Component(s):\n\nLecture 3 hours per week; Tutorial 2 hours per week\n\n###\n\nCOMP 346 Operating Systems (4 credits)\n\n#### Prerequisite/Corequisite:\n\nThe following courses must be completed previously:  [COMP\n228](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-\nengineering-and-computer-science/section-71-70-department-of-computer-science-\nand-software-engineering/section-71-70-10-computer-science-and-software-\nengineering-courses.html#3527) or  [SOEN\n228](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-\nengineering-and-computer-science/section-71-70-department-of-computer-science-\nand-software-engineering/section-71-70-10-computer-science-and-software-\nengineering-courses.html#3645);  [COMP\n352](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-\nengineering-and-computer-science/section-71-70-department-of-computer-science-\nand-software-engineering/section-71-70-10-computer-science-and-software-\nengineering-courses.html#3565).\n\n#### Description:\n\nFundamentals of operating system functionalities, design and implementation.\nMultiprogramming: processes and threads, context switching, queuing models and\nscheduling. Interprocess communication and synchronization. Principles of\nconcurrency. Synchronization primitives. Deadlock detection and recovery,\nprevention and avoidance schemes. Memory management. Device management. File\nsystems. Protection models and schemes.\n\n#### Component(s):\n\nLecture 3 hours per week; Tutorial 1 hour per week; Laboratory 2 hours per\nweek\n\n#### Notes:\n\n  \n\n  * Students who have received credit for COEN 346 may not take this course for credit.\n\n###\n\nCOMP 348 Principles of Programming Languages (3 credits)\n\n#### Prerequisite/Corequisite:\n\nThe following course must be completed previously:  [COMP\n249](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-\nengineering-and-computer-science/section-71-70-department-of-computer-science-\nand-software-engineering/section-71-70-10-computer-science-and-software-\nengineering-courses.html#3538).\n\n#### Description:\n\nThe course discusses the design, efficiency, and implementation of programming\nlanguages. A comparison of common high-level programming paradigms, including\nboth imperative and functional approaches, is provided. Core language features\nsuch as binding, visibility, and scope are evaluated across a set of current\nand historical languages. In addition, statically constrained typing and\nmemory management models are compared to dynamic run-time alternatives, with\nan emphasis on the trade-offs between flexibility and performance.\n\n#### Component(s):\n\nLecture 2 hours per week; Tutorial 1 hour per week\n\n###\n\nCOMP 352 Data Structures and Algorithms (3 credits)\n\n#### Prerequisite/Corequisite:\n\nThe following course must be completed previously or concurrently:  [COMP\n232](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-\nengineering-and-computer-science/section-71-70-department-of-computer-science-\nand-software-engineering/section-71-70-10-computer-science-and-software-\nengineering-courses.html#3529). The following courses must be completed\npreviously:  [COMP\n249](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-\nengineering-and-computer-science/section-71-70-department-of-computer-science-\nand-software-engineering/section-71-70-10-computer-science-and-software-\nengineering-courses.html#3538).\n\n#### Description:\n\nAbstract data types: stacks and queues, trees, priority queues, dictionaries.\nData structures: arrays, linked lists, heaps, hash tables, search trees.\nDesign and analysis of algorithms: asymptotic notation, recursive algorithms,\nsearching and sorting, tree traversal, graph algorithms.\n\n#### Component(s):\n\nLecture 3 hours per week; Tutorial 1 hour per week\n\n#### Notes:\n\n  \n\n  * Students who have received credit for COEN 352 may not take this course for credit.\n\n###\n\nCOMP 353 Databases (4 credits)\n\n#### Prerequisite/Corequisite:\n\nThe following courses must be completed previously:  [COMP\n232](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-\nengineering-and-computer-science/section-71-70-department-of-computer-science-\nand-software-engineering/section-71-70-10-computer-science-and-software-\nengineering-courses.html#3529) or  [COEN\n231](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-\nengineering-and-computer-science/section-71-60-engineering-course-\ndescriptions/computer-engineering-courses.html#3841); and [COMP\n352](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-\nengineering-and-computer-science/section-71-70-department-of-computer-science-\nand-software-engineering/section-71-70-10-computer-science-and-software-\nengineering-courses.html#3565) or  [COEN\n352](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-\nengineering-and-computer-science/section-71-60-engineering-course-\ndescriptions/computer-engineering-courses.html#3889).\n\n#### Description:\n\nThis course introduces database design, applications, and aspects of database\nmanagement systems. It covers conceptual database design using the entity-\nrelationship model. Students are introduced to the relational data model,\nrelational algebra, as well as the SQL language, and their applications.\nFurthermore, the course covers the development of database applications.\nStudents also learn about other data models, including Datalog and Object-\noriented. A project is required.\n\n#### Component(s):\n\nLecture 3 hours per week; Tutorial 1 hour per week; Laboratory 2 hours per\nweek\n\n#### Notes:\n\n  \n\n  * Students in the  [BEng in Software Engineering](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-engineering-and-computer-science/section-71-70-department-of-computer-science-and-software-engineering/section-71-70-9-degree-requirements-for-the-beng-in-software-engineering.html#12130) program may not take this course for credit.\n  * Students who have received credit for  [SOEN 363](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-engineering-and-computer-science/section-71-70-department-of-computer-science-and-software-engineering/section-71-70-10-computer-science-and-software-engineering-courses.html#3708) may not take this course for credit. \n\n###\n\nCOMP 354 Introduction to Software Engineering (4 credits)\n\n#### Prerequisite/Corequisite:\n\nThe following courses must be completed previously:  [COMP\n352](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-\nengineering-and-computer-science/section-71-70-department-of-computer-science-\nand-software-engineering/section-71-70-10-computer-science-and-software-\nengineering-courses.html#3565);  [ENCS\n282](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-\nengineering-and-computer-science/section-71-60-engineering-course-\ndescriptions/engineering-and-computer-science-courses.html#3482).\n\n#### Description:\n\nSoftware development process models (e.g. linear vs. iterative). Project\nmanagement; roles, activities and deliverables for each software life cycle\nphase. Requirements management: analysis, elicitation, and scope.\nArchitecture, design and the mapping of requirements to design and design to\nimplementation. Traceability. Software quality assurance: verification,\nvalidation and the role of testing. Maintenance and evolution. Project.\n\n#### Component(s):\n\nLecture 3 hours per week; Tutorial 1 hour per week; Laboratory 2 hour per week\n\n#### Notes:\n\n  \n\n  * Students who have received credit for SOEN 341 may not take this course for credit. Students in the BEng in Software Engineering program may not take this course for credit.\n\n###\n\nCOMP 361 Elementary Numerical Methods (3 credits)\n\n#### Prerequisite/Corequisite:\n\nThe following courses must be completed previously:  [COMP\n232](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-\nengineering-and-computer-science/section-71-70-department-of-computer-science-\nand-software-engineering/section-71-70-10-computer-science-and-software-\nengineering-courses.html#3529),  [COMP\n249](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-\nengineering-and-computer-science/section-71-70-department-of-computer-science-\nand-software-engineering/section-71-70-10-computer-science-and-software-\nengineering-courses.html#3538).\n\n#### Description:\n\nVector and matrix norms. Numerical methods for solving linear systems,\nGaussian elimination, LU decomposition, error analysis. Numerical solution of\nnonlinear equations, Newton\u2019s method, fixed point iterations. Interpolation\nand approximation, Taylor, Lagrange, Chebyshev and Legendre polynomials. Cubic\nspline interpolation. Numerical differentiation, numerical integration, Gauss\nquadrature. Discrete least\u00e2\u0080\u0091squares approximation. Initial value problems in\nordinary differential equations, stiff differential equations. Boundary value\nproblems in ordinary differential equations.\n\n#### Component(s):\n\nLecture 3 hours per week; Tutorial 1 hour per week\n\n#### Notes:\n\n  \n\n  * Students who have received credit for ENGR 391 or MAST 334 may not take this course for credit.\n\n###\n\nCOMP 367 Techniques in Symbolic Computation (3 credits)\n\n#### Prerequisite/Corequisite:\n\nThe following courses must be completed previously: [MATH\n222](/academics/undergraduate/calendar/current/section-31-faculty-of-arts-and-\nscience/section-31-200-department-of-mathematics-and-statistics/mathematics-\nand-statistics-courses.html#44750) or  [COMP\n232](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-\nengineering-and-computer-science/section-71-70-department-of-computer-science-\nand-software-engineering/section-71-70-10-computer-science-and-software-\nengineering-courses.html#3529) or equivalent; [COMP\n248](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-\nengineering-and-computer-science/section-71-70-department-of-computer-science-\nand-software-engineering/section-71-70-10-computer-science-and-software-\nengineering-courses.html#3535) or equivalent.\n\n#### Description:\n\nThis course is an application-oriented introduction to algebraic methods\ninvolved in symbolic computation, as it applies to number theory and modular\nalgebra, and covering the following topics: numbers, primes, modular\narithmetic, Diophantine equations; congruence classes and applications, finite\nfields and rings; Fermat\u2019s and Euler\u2019s theorems; Chinese Remainder theorem and\napplications; polynomial congruences and rings. Applications to: error-\ncorrecting codes (Humming codes), Hill Cryptosystem, public key encryption\nschemes, polynomial factorization, polynomial interpolation. A symbolic\ncomputation system (e.g. MAPLE), is used as a computational tool and a\nplatform for writing all assignments and tests but not as an object of study\nitself.\n\n#### Component(s):\n\nLecture\n\n#### Notes:\n\n  \n\n  * Students who have received credit for MAST 332 may not take this course for credit.\n\n###\n\nCOMP 371 Computer Graphics (4 credits)\n\n#### Prerequisite/Corequisite:\n\nThe following courses must be completed previously:  [COMP\n232](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-\nengineering-and-computer-science/section-71-70-department-of-computer-science-\nand-software-engineering/section-71-70-10-computer-science-and-software-\nengineering-courses.html#3529) or  [COEN\n231](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-\nengineering-and-computer-science/section-71-60-engineering-course-\ndescriptions/computer-engineering-courses.html#3841);  [COMP\n352](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-\nengineering-and-computer-science/section-71-70-department-of-computer-science-\nand-software-engineering/section-71-70-10-computer-science-and-software-\nengineering-courses.html#3565) or  [COEN\n352](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-\nengineering-and-computer-science/section-71-60-engineering-course-\ndescriptions/computer-engineering-courses.html#3889).\n\n#### Description:\n\nThis course covers the following topics: introduction to computer graphics and\ngraphics hardware; introduction to graphics API and graphics systems\narchitecture; mathematics of 2D and 3D transformations and 2D and 3D viewing;\ncolour and basic rendering algorithms; visual realism and visibility;\nillumination and shading and global illumination techniques and textures;\nintroduction to curves and surfaces and 3D object modelling; introduction to\ncomputer animation. This course includes a project.\n\n#### Component(s):\n\nLecture 3 hours per week; Tutorial 1 hour per week; Laboratory 2 hours per\nweek\n\n###\n\nCOMP 376 Introduction to Game Development (4 credits)\n\n#### Prerequisite/Corequisite:\n\nThe following courses must be completed previously:  [COMP\n371](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-\nengineering-and-computer-science/section-71-70-department-of-computer-science-\nand-software-engineering/section-71-70-10-computer-science-and-software-\nengineering-courses.html#3572).\n\n#### Description:\n\nThis course introduces students to design and implementation aspects of\ncomputer gaming, including topics such as game technologies, basic game\ndesign, programming, applied mathematics, storytelling and narratives, and\ngame genres. The course covers virtual environments, 2D and 3D game engines,\nand game development tools. Furthermore, students learn about character\ndevelopment, gameplay strategies, level design in games, and user interfaces.\nOther topics covered in the course include architecture of game consoles,\nanalog and digital controllers, and the incorporation of graphics, sound, and\nmusic in game implementations. During the course, the students develop 2D and\n3D games. A project is required.\n\n#### Component(s):\n\nLecture 3 hours per week; Laboratory 2 hours per week\n\n#### Notes:\n\n  \n\n  * Students who have received credit for  [CART 315](/academics/undergraduate/calendar/current/section-81-faculty-of-fine-arts/section-81-90-department-of-design-and-computation-arts/computation-arts-courses.html#4311) may not take this course for credit.\n\n###\n\nCOMP 425 Computer Vision (4 credits)\n\n#### Description:\n\nThis course introduces basic techniques and concepts in computer vision\nincluding image formation, grouping and fitting, geometric vision,\nrecognition, perceptual organization, and the state-of-the-art software tools.\nStudents learn fundamental algorithms and techniques, and gain experience in\nprogramming vision-based components. A project is required.\n\n#### Component(s):\n\nLecture 3 hours per week; Laboratory 2 hours per week\n\n###\n\nCOMP 426 Multicore Programming (4 credits)\n\n#### Prerequisite/Corequisite:\n\nThe following courses must be completed previously: [COMP\n346](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-\nengineering-and-computer-science/section-71-70-department-of-computer-science-\nand-software-engineering/section-71-70-10-computer-science-and-software-\nengineering-courses.html#3556) or  [COEN\n346](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-\nengineering-and-computer-science/section-71-60-engineering-course-\ndescriptions/computer-engineering-courses.html#3881).\n\n#### Description:\n\nFundamental concepts of computer architecture. Architecture of the selected\nmulticore platform. Review of shared\u00e2\u0080\u0091memory parallel programming. The\ndifficulties inherent to parallel programming. Scalability of programming\nmodels. The stream programming model for multicore. Implicit and explicit\nthreading. Implicit and explicit orchestration of data movement, both on chip\nand off. Adapting standard algorithms to multicore. Critical assessment of the\navailable system\u00e2\u0080\u0091software support. Project.\n\n#### Component(s):\n\nLecture 3 hours per week; Laboratory 2 hours per week\n\n###\n\nCOMP 428 Parallel Programming (4 credits)\n\n#### Prerequisite/Corequisite:\n\nThe following courses must be completed previously:  [COMP\n346](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-\nengineering-and-computer-science/section-71-70-department-of-computer-science-\nand-software-engineering/section-71-70-10-computer-science-and-software-\nengineering-courses.html#3556) or  [COEN\n346](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-\nengineering-and-computer-science/section-71-60-engineering-course-\ndescriptions/computer-engineering-courses.html#3881).\n\n#### Description:\n\nParallel programming techniques as a natural extension to sequential\nprogramming. Overview of parallel programming architectures and models.\nParallel programming issues: locality, granularity, scheduling, data\ndecomposition and distribution, load balancing, communication and\nsynchronization, determinacy and non\u00e2\u0080\u0091determinacy, cost and performance.\nTechniques and tools for message\u00e2\u0080\u0091passing parallel programming. Case studies.\nProject.\n\n#### Component(s):\n\nLecture 3 hours per week; Tutorial 1 hour per week; Laboratory 2 hours per\nweek\n\n###\n\nCOMP 432 Machine Learning (4 credits)\n\n#### Prerequisite/Corequisite:\n\nThe following course must be completed previously:  [COMP\n352](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-\nengineering-and-computer-science/section-71-70-department-of-computer-science-\nand-software-engineering/section-71-70-10-computer-science-and-software-\nengineering-courses.html#3565).\n\n#### Description:\n\nThis course introduces conceptual and practical aspects of machine learning.\nConcepts include regression, classification, maximum likelihood estimation,\ndiscriminative vs. generative modelling, generalization, supervised learning,\nunsupervised learning, semi-supervised learning and transfer learning. Methods\ninclude linear models, mixture models, nearest neighbours, support vector\nmachines, random forests, boosting, and basics of deep learning. A project is\nrequired.\n\n#### Component(s):\n\nLecture 3 hours per week; Laboratory 2 hours per week\n\n###\n\nCOMP 433 Introduction to Deep Learning (4 credits)\n\n#### Prerequisite/Corequisite:\n\nThe following course must be completed previously: [COMP\n352](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-\nengineering-and-computer-science/section-71-70-department-of-computer-science-\nand-software-engineering/section-71-70-10-computer-science-and-software-\nengineering-courses.html#3565).\n\n#### Description:\n\nThis course introduces conceptual and practical aspects of deep learning and\ntheir implementation in software. Topics covered include commonly used deep\nlearning model architectures, loss functions, regularization, optimization\nmethods, and a strong emphasis is placed on review of their foundations and\nuse of software tools such as pytorch, jax, and tensorflow to implement and/or\napply these models. Applications in computer vision and natural language\nprocessing are covered. A final project is required.\n\n#### Component(s):\n\nLecture 3 hours per week; Laboratory 2 hours per week\n\n###\n\nCOMP 438 Geometric Modelling and Processing (4 credits)\n\n#### Prerequisite/Corequisite:\n\nThe following course must be completed previously: [COMP\n352](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-\nengineering-and-computer-science/section-71-70-department-of-computer-science-\nand-software-engineering/section-71-70-10-computer-science-and-software-\nengineering-courses.html#3565).\n\n#### Description:\n\nThis course exposes students to the geometric modelling pipeline. It includes\ntopics such as efficient mesh data structures such as half-edge and\ncornertable, digital differential geometry, spectral mesh processing, discrete\nmodelling tools and analytic modelling tools (B-Splines, Bezier and\nsubdivision surfaces), optimization-driven modelling and simulation, 3D shape\nacquisition, 3D printing and prototyping. Application-related topics are\ndiscussed such as smoothing, resampling, compression, as well as deep neural\nnetwork architectures for geometric data and modelling problems. A project is\nrequired.\n\n#### Component(s):\n\nLecture 3 hours per week; Laboratory 2 hours per week\n\n###\n\nCOMP 442 Compiler Design (4 credits)\n\n#### Prerequisite/Corequisite:\n\nThe following courses must be completed previously:  [COMP\n228](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-\nengineering-and-computer-science/section-71-70-department-of-computer-science-\nand-software-engineering/section-71-70-10-computer-science-and-software-\nengineering-courses.html#3527) or  [SOEN\n228](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-\nengineering-and-computer-science/section-71-70-department-of-computer-science-\nand-software-engineering/section-71-70-10-computer-science-and-software-\nengineering-courses.html#3645) or  [COEN\n311](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-\nengineering-and-computer-science/section-71-60-engineering-course-\ndescriptions/computer-engineering-courses.html#3844);  [COMP\n335](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-\nengineering-and-computer-science/section-71-70-department-of-computer-science-\nand-software-engineering/section-71-70-10-computer-science-and-software-\nengineering-courses.html#3549);  [COMP\n352](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-\nengineering-and-computer-science/section-71-70-department-of-computer-science-\nand-software-engineering/section-71-70-10-computer-science-and-software-\nengineering-courses.html#3565) or  [COEN\n352](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-\nengineering-and-computer-science/section-71-60-engineering-course-\ndescriptions/computer-engineering-courses.html#3889).\n\n#### Description:\n\nCompiler organization and implementation: lexical analysis and parsing,\nsyntax\u00e2\u0080\u0091directed translation, code optimization. Run\u00e2\u0080\u0091time systems. Project.\n\n#### Component(s):\n\nLecture 3 hours per week; Laboratory 2 hours per week\n\n###\n\nCOMP 444 System Software Design (4 credits)\n\n#### Prerequisite/Corequisite:\n\nThe following courses must be completed previously:  [COMP\n346](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-\nengineering-and-computer-science/section-71-70-department-of-computer-science-\nand-software-engineering/section-71-70-10-computer-science-and-software-\nengineering-courses.html#3556).\n\n#### Description:\n\nDetailed examination of the design, implementation and system call interface\nof a contemporary operating system: its kernel, file system, process and\nthread management including scheduling, file system design and implementation,\nmemory management, device management, I/O management, interprocess\ncommunication and synchronization mechanisms, system call interface, interrupt\nhandling, and other advanced issues. Project.\n\n#### Component(s):\n\nLecture 3 hours per week; Laboratory 2 hours per week\n\n###\n\nCOMP 445 Data Communication and Computer Networks (4 credits)\n\n#### Prerequisite/Corequisite:\n\nThe following courses must be completed previously:  [COMP\n346](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-\nengineering-and-computer-science/section-71-70-department-of-computer-science-\nand-software-engineering/section-71-70-10-computer-science-and-software-\nengineering-courses.html#3556).\n\n#### Description:\n\nThis course introduces the fundamentals of networking protocols and\ncommunication technologies. Topics covered include network architectures and\nservice models, principles behind the design of protocol stacks, local and\nwide area networks, and the Internet. The course also covers a review of the\nfoundations and performance of application layer protocols, reliable delivery\nmechanisms, congestion and flow control, control and data planes, routing and\nswitching, error detection and correction, and multiple access protocols. The\ncourse includes an introduction to wireless networking and security.\u00e2\u0080\u00af\n\n#### Component(s):\n\nLecture 3 hours per week; Tutorial 1 hour per week; Laboratory 2 hours per\nweek\n\n###\n\nCOMP 451 Database Design (4 credits)\n\n#### Prerequisite/Corequisite:\n\nThe following courses must be completed previously:  [COMP\n353](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-\nengineering-and-computer-science/section-71-70-department-of-computer-science-\nand-software-engineering/section-71-70-10-computer-science-and-software-\nengineering-courses.html#3567).\n\n#### Description:\n\nStorage management. Buffer management. Data organization. Index structures.\nQuery optimization and execution. Transaction management. Recovery.\nConcurrency control. Database performance analysis and tuning. New trends in\ndatabase technology. Project.\n\n#### Component(s):\n\nLecture 3 hours per week; Laboratory 2 hours per week\n\n###\n\nCOMP 465 Design and Analysis of Algorithms (3 credits)\n\n#### Prerequisite/Corequisite:\n\nThe following courses must be completed previously:  [COMP\n232](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-\nengineering-and-computer-science/section-71-70-department-of-computer-science-\nand-software-engineering/section-71-70-10-computer-science-and-software-\nengineering-courses.html#3529) or  [COEN\n231](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-\nengineering-and-computer-science/section-71-60-engineering-course-\ndescriptions/computer-engineering-courses.html#3841);  [COMP\n339](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-\nengineering-and-computer-science/section-71-70-department-of-computer-science-\nand-software-engineering/section-71-70-10-computer-science-and-software-\nengineering-courses.html#3551);  [COMP\n352](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-\nengineering-and-computer-science/section-71-70-department-of-computer-science-\nand-software-engineering/section-71-70-10-computer-science-and-software-\nengineering-courses.html#3565) or [COEN\n352](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-\nengineering-and-computer-science/section-71-60-engineering-course-\ndescriptions/computer-engineering-courses.html#3889).\n\n#### Description:\n\nOrder statistics: worst\u00e2\u0080\u0091case, average\u00e2\u0080\u0091case and amortized analysis.\nAlgorithm design techniques: greedy algorithms, dynamic programming. Selected\nalgorithms from graph theory, linear programming, number theory, string\nmatching, and computational geometry. A survey of hard problems,\nNP\u00e2\u0080\u0091completeness, and approximation algorithms.\n\n#### Component(s):\n\nLecture 3 hours per week\n\n###\n\nCOMP 472 Artificial Intelligence (4 credits)\n\n#### Prerequisite/Corequisite:\n\nThe following course must be completed previously:  [COMP\n352](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-\nengineering-and-computer-science/section-71-70-department-of-computer-science-\nand-software-engineering/section-71-70-10-computer-science-and-software-\nengineering-courses.html#3565) or  [COEN\n352](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-\nengineering-and-computer-science/section-71-60-engineering-course-\ndescriptions/computer-engineering-courses.html#3889).\n\n#### Description:\n\nThis course initially describes the scope and history of Artificial\nIntelligence. Then it covers knowledge representation, heuristic search, game\nplaying and planning. Finally, it introduces the topics of machine learning,\ngenetic algorithms and natural language processing. A project is required.\n\n#### Component(s):\n\nLecture 3 hours per week; Laboratory 2 hours per week\n\n###\n\nCOMP 473 Pattern Recognition (4 credits)\n\n#### Prerequisite/Corequisite:\n\nThe following courses must be completed previously:  [COMP\n352](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-\nengineering-and-computer-science/section-71-70-department-of-computer-science-\nand-software-engineering/section-71-70-10-computer-science-and-software-\nengineering-courses.html#3565).\n\n#### Description:\n\nPreprocessing. Feature extraction and selection. Similarity between patterns\nand distance measurements. Syntactic and statistical approaches. Clustering\nanalysis. Bayesian decision theory and discriminant functions. Neural networks\nand machine learning. Applications. Project.\n\n#### Component(s):\n\nLecture 3 hours per week; Laboratory 2 hours per week\n\n###\n\nCOMP 474 Intelligent Systems (4 credits)\n\n#### Prerequisite/Corequisite:\n\nThe following course must be completed previously:  [COMP\n352](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-\nengineering-and-computer-science/section-71-70-department-of-computer-science-\nand-software-engineering/section-71-70-10-computer-science-and-software-\nengineering-courses.html#3565) or  [COEN\n352](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-\nengineering-and-computer-science/section-71-60-engineering-course-\ndescriptions/computer-engineering-courses.html#3889).\n\n#### Description:\n\nRule\u00e2\u0080\u0091based expert systems, blackboard architecture, and agent\u00e2\u0080\u0091based.\nKnowledge acquisition and representation. Uncertainty and conflict resolution.\nReasoning and explanation. Design of intelligent systems. Project.\n\n#### Component(s):\n\nLecture 3 hours per week; Laboratory 2 hours per week\n\n###\n\nCOMP 475 Immersive Technologies (4 credits)\n\n#### Prerequisite/Corequisite:\n\nThe following course must be completed previously: [COMP\n371](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-\nengineering-and-computer-science/section-71-70-department-of-computer-science-\nand-software-engineering/section-71-70-10-computer-science-and-software-\nengineering-courses.html#3572).\n\n#### Description:\n\nThis course covers the fundamentals of immersive technologies, a brief history\nand overview of immersive technologies, analyzes case studies of interactive\nexperiences using immersive technologies, and identifies the main challenges\nof the current state of the art. Furthermore, it covers the basic principles\nof 3D graphics for creating virtual assets and environments, and basic\nconcepts and technologies for interaction. A project provides hands\u00e2\u0080\u0091on\nexperience in the design and development of interactive experiences with the\nuser of immersive technologies.\n\n#### Component(s):\n\nLecture 3 hours per week\n\n###\n\nCOMP 476 Advanced Game Development (4 credits)\n\n#### Prerequisite/Corequisite:\n\nThe following course must be completed previously:  [COMP\n361](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-\nengineering-and-computer-science/section-71-70-department-of-computer-science-\nand-software-engineering/section-71-70-10-computer-science-and-software-\nengineering-courses.html#3569) or  [ENGR\n391](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-\nengineering-and-computer-science/section-71-60-engineering-course-\ndescriptions/engineering-courses.html#3550);  [COMP\n376](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-\nengineering-and-computer-science/section-71-70-department-of-computer-science-\nand-software-engineering/section-71-70-10-computer-science-and-software-\nengineering-courses.html#3573).\n\n#### Description:\n\nIntroduction to advanced aspects of computer games. Game engine design.\nArtificial Intelligence (AI): non\u00e2\u0080\u0091player character movement, coordinated\nmovement, pathfinding, world representations; decision making; tactical AI,\nstrategic AI, learning in games. Physics\u00e2\u0080\u0091based techniques: collision\ndetection and response. Networked gaming: multi\u00e2\u0080\u0091player games, networking and\ndistributed game design, mobile gaming. Improving realism: cut scenes, 3D\nsound. Project.\n\n#### Component(s):\n\nLecture 3 hours per week; Laboratory 2 hours per week\n\n###\n\nCOMP 477 Animation for Computer Games (4 credits)\n\n#### Prerequisite/Corequisite:\n\nThe following courses must be completed previously:  [COMP\n361](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-\nengineering-and-computer-science/section-71-70-department-of-computer-science-\nand-software-engineering/section-71-70-10-computer-science-and-software-\nengineering-courses.html#3569) or  [ENGR\n391](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-\nengineering-and-computer-science/section-71-60-engineering-course-\ndescriptions/engineering-courses.html#3550), [COMP\n371](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-\nengineering-and-computer-science/section-71-70-department-of-computer-science-\nand-software-engineering/section-71-70-10-computer-science-and-software-\nengineering-courses.html#3572).\n\n#### Description:\n\nIntroduction to the algorithms, data structures, and techniques used in\nmodelling and rendering dynamic scenes. Topics include principles of\ntraditional animation, production pipeline, animation hardware and software,\norientation representation and interpolation, modelling physical and\narticulated objects, forward and inverse kinematics, motion control and\ncapture, key\u00e2\u0080\u0091frame, procedural, and behavioural animation, camera animation,\nscripting system, and free\u00e2\u0080\u0091form deformation. Project.\n\n#### Component(s):\n\nLecture 3 hours per week; Laboratory 2 hours per week\n\n###\n\nCOMP 478 Image Processing (4 credits)\n\n#### Prerequisite/Corequisite:\n\nThe following courses must be completed previously:  [COMP\n352](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-\nengineering-and-computer-science/section-71-70-department-of-computer-science-\nand-software-engineering/section-71-70-10-computer-science-and-software-\nengineering-courses.html#3565).\n\n#### Description:\n\nDigital image fundamentals, image transforms (Fourier, Walsh, Haar, Hotelling,\nwavelet), image enhancement (histogram processing, spatial filtering, high\u00e2\u0080\u0091\nand low\u00e2\u0080\u0091pass filtering), image restoration, image compression (elements of\ninformation theory, image compression models, error\u00e2\u0080\u0091free compression, lossy\ncompression, image compression standards), image segmentation (line detection,\nHough transform, edge detection and linking, thresholding, region splitting\nand merging), representation and description (chain codes, signatures,\nskeletons, shape descriptors, moments, texture). Project.\n\n#### Component(s):\n\nLecture 3 hours per week; Laboratory 2 hours per week\n\n###\n\nCOMP 479 Information Retrieval and Web Search (4 credits)\n\n#### Prerequisite/Corequisite:\n\nThe following courses must be completed previously:  [COMP\n233](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-\nengineering-and-computer-science/section-71-70-department-of-computer-science-\nand-software-engineering/section-71-70-10-computer-science-and-software-\nengineering-courses.html#3532) or  [ENGR\n371](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-\nengineering-and-computer-science/section-71-60-engineering-course-\ndescriptions/engineering-courses.html#3548); [COMP\n352](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-\nengineering-and-computer-science/section-71-70-department-of-computer-science-\nand-software-engineering/section-71-70-10-computer-science-and-software-\nengineering-courses.html#3565).\n\n#### Description:\n\nBasics of information retrieval (IR): boolean, vector space and probabilistic\nmodels. Tokenization and creation of inverted files. Weighting schemes.\nEvaluation of IR systems: precision, recall, F\u00e2\u0080\u0091measure. Relevance feedback\nand query expansion. Application of IR to web search engines: XML, link\nanalysis, PageRank algorithm. Text categorization and clustering techniques as\nused in spam filtering. Project.\n\n#### Component(s):\n\nLecture 3 hours per week; Laboratory 2 hours per week\n\n###\n\nCOMP 490 Computer Science Project I (3 credits)\n\n#### Prerequisite/Corequisite:\n\nThe following courses must be completed previously:  [ENCS\n282](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-\nengineering-and-computer-science/section-71-60-engineering-course-\ndescriptions/engineering-and-computer-science-courses.html#3482). Students\nmust complete 60 credits prior to enrolling. Permission of the Department is\nrequired.\n\n#### Description:\n\nStudents work on a computer science project under the supervision of a faculty\nmember and submit a suitable written report on the work carried out.\n\n#### Component(s):\n\nLecture\n\n#### Notes:\n\n  \n\n  * Students can register for COMP 490 by itself or, with the permission of the Department, students can register for COMP 490 and 492 concurrently and carry out a major project.\n\n###\n\nCOMP 492 Computer Science Project II (3 credits)\n\n#### Prerequisite/Corequisite:\n\nThe following courses must be completed previously or concurrently:  [COMP\n490](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-\nengineering-and-computer-science/section-71-70-department-of-computer-science-\nand-software-engineering/section-71-70-10-computer-science-and-software-\nengineering-courses.html#3621). Permission of the Department is required.\n\n#### Description:\n\nStudents work on a computer science project under the supervision of a faculty\nmember and submit a suitable written report on the work carried out.\n\n#### Component(s):\n\nLecture\n\n#### Notes:\n\n  \n\n  * Students can register for COMP 492 by itself or, with the permission of the Department, students can register for [COMP 490](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-engineering-and-computer-science/section-71-70-department-of-computer-science-and-software-engineering/section-71-70-10-computer-science-and-software-engineering-courses.html#3621) and COMP 492 concurrently and carry out a major project.\n\n###\n\nCOMP 493 Computational Biology Team Project (6 credits)\n\n_\n\n#### (also listed as[BIOL\n493](/academics/undergraduate/calendar/current/section-31-faculty-of-arts-and-\nscience/section-31-030-department-of-biology/biology-courses.html#21670))\n\n_\n\n#### Prerequisite/Corequisite:\n\nThe following courses must be completed previously:  [BIOL\n367](/academics/undergraduate/calendar/current/section-31-faculty-of-arts-and-\nscience/section-31-030-department-of-biology/biology-courses.html#1570);\n[COMP 352](/academics/undergraduate/calendar/current/section-71-gina-cody-\nschool-of-engineering-and-computer-science/section-71-70-department-of-\ncomputer-science-and-software-engineering/section-71-70-10-computer-science-\nand-software-engineering-courses.html#3565). Students must complete a minimum\nof 54 credits in the  [BCompSc in Health and Life\nSciences](/academics/undergraduate/calendar/current/section-71-gina-cody-\nschool-of-engineering-and-computer-science/section-71-75-computer-science-in-\nhealth-and-life-sciences/section-71-75-1-curriculum-for-the-degree-of-bcompsc-\nin-health-and-life-sciences.html#23497) program prior to enrolling. If\nprerequisites are not satisfied, permission of the Department is required.\n\n#### Description:\n\nStudents form teams or join existing teams (such as those in research labs)\nand work under faculty supervision to solve a computational biology research\nproblem or to carry out a computational biology research project. The research\nproblem or project involves the utilization of knowledge of biology and of\ncomputing, involves computing lab and/or wet lab practice and contributes to\nany of the areas of computational biology. The project fosters teamwork and\nallows students to develop their project management, technical writing and\noral presentation skills.\n\n#### Component(s):\n\nResearch\n\n#### Notes:\n\n  \n\n  * Students who have received credit for  [BIOL 493](/academics/undergraduate/calendar/current/section-31-faculty-of-arts-and-science/section-31-030-department-of-biology/biology-courses.html#21670) may not take this course for credit.\n\n###\n\nCOMP 495 Honours Seminar (1 credits)\n\n#### Prerequisite/Corequisite:\n\nThe following courses must be completed previously:  [ENCS\n282](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-\nengineering-and-computer-science/section-71-60-engineering-course-\ndescriptions/engineering-and-computer-science-courses.html#3482). Registration\nin the final year of the honours program is required.\n\n#### Description:\n\nStudents are required to attend a number of departmental seminars and submit a\nwritten report on them.\n\n#### Component(s):\n\nSeminar\n\n###\n\nCOMP 498 Topics in Computer Science (3 credits)\n\n#### Prerequisite/Corequisite:\n\nPermission of the Department is required.\n\n#### Description:\n\nThis course may be offered in a given year upon the authorization of the\nDepartment. The content may vary from offering to offering and will be chosen\nto complement the available elective courses.\n\n#### Component(s):\n\nLecture 3 hours per week\n\n###\n\nCOMP 499 Topics in Computer Science with Lab (4 credits)\n\n#### Prerequisite/Corequisite:\n\nPermission of the Department is required.\n\n#### Description:\n\nThe content may vary from offering to offering and will be chosen to\ncomplement the available elective courses.\n\n#### Component(s):\n\nLecture 3 hours per week; Laboratory 2 hours per week\n\n## Software Engineering Courses\n\n###\n\nSOEN 228 System Hardware (4 credits)\n\n#### Prerequisite/Corequisite:\n\nThe following courses must be completed previously:  [MATH\n203](/academics/undergraduate/calendar/current/section-31-faculty-of-arts-and-\nscience/section-31-200-department-of-mathematics-and-statistics/mathematics-\nand-statistics-courses.html#2590) or Cegep Mathematics 103,  [MATH\n204](/academics/undergraduate/calendar/current/section-31-faculty-of-arts-and-\nscience/section-31-200-department-of-mathematics-and-statistics/mathematics-\nand-statistics-courses.html#2592) or Cegep Mathematics 105.\n\n#### Description:\n\nThis course covers the following topics: Boolean Algebra, Digital logic and\nthe design of logic circuits; CPU design; addressing modes; instruction sets\nand sequencing; design of datapath and control units; memory systems and\ntypes; cache memory levels; I/O devices and their interconnection to the CPU;\nassembly language, and Interrupts.\n\n#### Component(s):\n\nLecture 3 hours per week; Tutorial 2 hours per week; Laboratory 2 hours per\nweek\n\n#### Notes:\n\n  \n\n  * Students who have received credit for [COMP 228](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-engineering-and-computer-science/section-71-70-department-of-computer-science-and-software-engineering/section-71-70-10-computer-science-and-software-engineering-courses.html#3527) may not take this course for credit.\n\n###\n\nSOEN 287 Web Programming (3 credits)\n\n#### Prerequisite/Corequisite:\n\nThe following course must be completed previously:  [COMP\n248](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-\nengineering-and-computer-science/section-71-70-department-of-computer-science-\nand-software-engineering/section-71-70-10-computer-science-and-software-\nengineering-courses.html#3535).\n\n#### Description:\n\nThis course covers the following topics: internet architecture and protocols;\nweb applications through clients and servers; modern HTML and CSS;\nclient\u00e2\u0080\u0091side programming using modern JavaScript and an overview of the\nadvantages of some common modern JavaScript libraries; Regular Expressions;\nstatic website contents and dynamic page generation through server\u00e2\u0080\u0091side\nprogramming; preserving state (client\u00e2\u0080\u0091side) in web applications; deploying\nstatic and dynamic websites and content management systems vs. website\ndeployment.\n\n#### Component(s):\n\nLecture 3 hours per week; Tutorial 2 hours per week\n\n###\n\nSOEN 298 System Hardware Lab (1 credits)\n\n#### Prerequisite/Corequisite:\n\nPermission of the undergraduate program director is required.\n\n#### Description:\n\nDigital design exercises including assembly and testing corresponding to the\n[SOEN 228](/academics/undergraduate/calendar/current/section-71-gina-cody-\nschool-of-engineering-and-computer-science/section-71-70-department-of-\ncomputer-science-and-software-engineering/section-71-70-10-computer-science-\nand-software-engineering-courses.html#3645) lab.\n\n#### Component(s):\n\nLaboratory 2 hours per week\n\n###\n\nSOEN 321 Information Systems Security (3 credits)\n\n#### Prerequisite/Corequisite:\n\nThe following course must be completed previously:  [COMP\n346](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-\nengineering-and-computer-science/section-71-70-department-of-computer-science-\nand-software-engineering/section-71-70-10-computer-science-and-software-\nengineering-courses.html#3556) or  [COEN\n346](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-\nengineering-and-computer-science/section-71-60-engineering-course-\ndescriptions/computer-engineering-courses.html#3881).\n\n#### Description:\n\nThis course covers the following topics: introduction to cryptography and\ncryptanalysis; threats, attacks, and vulnerabilities; security services\n(confidentiality, authentication, integrity); public key systems including\nDiffie\u00e2\u0080\u0091Hellman, RSA, Rabin; Digital Signature Schemes; Hash functions and\nMAC schemes; authentication protocols; network layers and security; protocols;\nPublic Key Infrastructure (PKI); Transport Layer Security (TLS); firewalls;\nIntrusion Detection Systems; DNS security; Denial of Service Attacks;\nPenetration testing; Online Privacy and anonymity; Mix networks and Onion\nRouting; TOR; Malware; Botnets; Spam and Hot topics in Security and Privacy.\n\n#### Component(s):\n\nLecture 3 hours per week; Tutorial 1 hour per week\n\n###\n\nSOEN 331 Formal Methods for Software Engineering (3 credits)\n\n#### Prerequisite/Corequisite:\n\nThe following courses must be completed previously:  [COMP\n232](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-\nengineering-and-computer-science/section-71-70-department-of-computer-science-\nand-software-engineering/section-71-70-10-computer-science-and-software-\nengineering-courses.html#3529),  [COMP\n249](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-\nengineering-and-computer-science/section-71-70-department-of-computer-science-\nand-software-engineering/section-71-70-10-computer-science-and-software-\nengineering-courses.html#3538).\n\n#### Description:\n\nThis course covers the following topics: property\u00e2\u0080\u0091based (axiomatic and\nalgebraic) formalisms and model\u00e2\u0080\u0091based (abstract and visual) formalisms;\naxiomatic formalisms with temporal logic, assertions and contracts; algebraic\nformalisms through algebraic specifications; abstract formalisms through the Z\nand Object\u00e2\u0080\u0091Z specification languages; visual formalisms through automata\n(finite state machines and extended finite state machines).\n\n#### Component(s):\n\nLecture 3 hours per week; Tutorial 2 hours per week\n\n###\n\nSOEN 341 Software Process and Practices (4 credits)\n\n#### Prerequisite/Corequisite:\n\nThe following courses must be completed previously or concurrently:  [COMP\n352](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-\nengineering-and-computer-science/section-71-70-department-of-computer-science-\nand-software-engineering/section-71-70-10-computer-science-and-software-\nengineering-courses.html#3565) or  [COEN\n352](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-\nengineering-and-computer-science/section-71-60-engineering-course-\ndescriptions/computer-engineering-courses.html#3889);  [ENCS\n282](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-\nengineering-and-computer-science/section-71-60-engineering-course-\ndescriptions/engineering-and-computer-science-courses.html#3482).\n\n#### Description:\n\nThis course covers the following topics: basic principles of software\nengineering; introduction to software process, including activities, phases,\norganization, roles, teamwork, and conflict resolution; notations used in\nsoftware engineering; software development practices, including documentation,\nmodern version control, review, testing, agile, and continuous integration.\n\n#### Component(s):\n\nLecture 3 hours per week; Tutorial 1 hour per week; Laboratory 2 hours per\nweek\n\n#### Notes:\n\n  \n\n  * Students who have received credit for [COMP 354](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-engineering-and-computer-science/section-71-70-department-of-computer-science-and-software-engineering/section-71-70-10-computer-science-and-software-engineering-courses.html#3568) may not take this course for credit.\n\n###\n\nSOEN 342 Software Requirements and Deployment (4 credits)\n\n#### Prerequisite/Corequisite:\n\nThe following course must be completed previously:  [SOEN\n341](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-\nengineering-and-computer-science/section-71-70-department-of-computer-science-\nand-software-engineering/section-71-70-10-computer-science-and-software-\nengineering-courses.html#3697).\n\n#### Description:\n\nThis course covers the following topics: requirements engineering; eliciting\nand coping with changing and evolving requirements; deployment of a software\nsystem under real\u00e2\u0080\u0091life functional and non\u00e2\u0080\u0091functional requirements\nscenarios; understanding how requirements impact early\u00e2\u0080\u0091stage and deployed\nsoftware systems through all phases of engineering, including design,\nimplementation, test and verification, deployment, and evolution. A project is\nrequired.\n\n#### Component(s):\n\nLecture 3 hours per week; Tutorial 1 hour per week; Laboratory 2 hours per\nweek\n\n###\n\nSOEN 343 Software Architecture and Design (4 credits)\n\n#### Prerequisite/Corequisite:\n\nThe following courses must be completed previously or concurrently:  [SOEN\n341](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-\nengineering-and-computer-science/section-71-70-department-of-computer-science-\nand-software-engineering/section-71-70-10-computer-science-and-software-\nengineering-courses.html#3697);  [SOEN\n342](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-\nengineering-and-computer-science/section-71-70-department-of-computer-science-\nand-software-engineering/section-71-70-10-computer-science-and-software-\nengineering-courses.html#3699).\n\n#### Description:\n\nThis course covers the following topics: from requirements to design to\nimplementation; planned vs. evolutionary design and refactoring;\nmodel\u00e2\u0080\u0091driven design and Unified Modelling Language (UML); structural and\nbehavioural design descriptions and specifications; general and\ndomain\u00e2\u0080\u0091specific design principles, patterns and idioms; introduction to\nsoftware architecture (styles and view models); design quality; architectural\ndebt; design smells; refactoring Anti\u00e2\u0080\u0091Patterns to Patterns; design\nrationale.\n\n#### Component(s):\n\nLecture 3 hours per week; Tutorial 1 hour per week; Laboratory 2 hours per\nweek\n\n###\n\nSOEN 344 Advanced Software Architecture and Design (3 credits)\n\n#### Prerequisite/Corequisite:\n\nThe following course must be completed previously:  [SOEN\n343](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-\nengineering-and-computer-science/section-71-70-department-of-computer-science-\nand-software-engineering/section-71-70-10-computer-science-and-software-\nengineering-courses.html#3701).\n\n#### Description:\n\nThis course covers the following topics: architectural activities, roles, and\ndeliverables; architectural view models; architectural styles (including\nclient\u00e2\u0080\u0091server, layered, pipes\u00e2\u0080\u0091and\u00e2\u0080\u0091filters, event\u00e2\u0080\u0091based, process\ncontrol) and frameworks; architectural analysis and the interplay with\nrequirements elicitation; notations for expressing architectural designs,\nstructural and behavioural specifications; from architectural design to\ndetailed design; domain specific architectures and design patterns; evaluation\nand performance estimation of designs; advanced object\u00e2\u0080\u0091oriented design\npatterns and idioms.\n\n#### Component(s):\n\nLecture 3 hours per week; Tutorial 1 hour per week\n\n###\n\nSOEN 345 Software Testing, Verification and Quality Assurance (4 credits)\n\n#### Prerequisite/Corequisite:\n\nThe following courses must be completed previously or concurrently:  [SOEN\n343](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-\nengineering-and-computer-science/section-71-70-department-of-computer-science-\nand-software-engineering/section-71-70-10-computer-science-and-software-\nengineering-courses.html#3701).\n\n#### Description:\n\nThis course explores a range of essential testing and development practices,\nincluding unit testing, test-driven development, and legacy system testing.\nStudents learn about mocking, dependency injection, and strategies for\nbreaking system dependencies. The course also covers integration and system\ntesting, along with test planning and management, including test\nprioritization and handling flaky tests. Advanced topics such as static\nanalysis, bisection, fuzzing, and verification are introduced. Additionally,\nthe course delves into continuous integration, continuous delivery, and DevOps\ntesting, with a focus on practices like A/B testing.\n\n#### Component(s):\n\nLecture 3 hours per week; Tutorial 1 hour per week; Laboratory 2 hours per\nweek\n\n###\n\nSOEN 357 User Interface Design (3 credits)\n\n#### Prerequisite/Corequisite:\n\nThe following course must be completed previously:  [SOEN\n341](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-\nengineering-and-computer-science/section-71-70-department-of-computer-science-\nand-software-engineering/section-71-70-10-computer-science-and-software-\nengineering-courses.html#3697) or  [COMP\n354](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-\nengineering-and-computer-science/section-71-70-department-of-computer-science-\nand-software-engineering/section-71-70-10-computer-science-and-software-\nengineering-courses.html#3568).\n\n#### Description:\n\nThis course covers the following topics: principles, standards and guidelines\nfor user interface design; usability principles and user experience; standards\nand design rationale for user\u00e2\u0080\u0091centred design; task\u00e2\u0080\u0091centred design;\nrationalized design; usability engineering; user models; interface design\nprocess, including interface requirement gathering, conceptual design and\nprototyping, and evaluation; usability testing and analytic evaluation; data\ngathering and analysis techniques for qualitative and quantitative data;\ninterface design documentation; design approaches for touch, gesture\u00e2\u0080\u0091based,\nand haptic interfaces.  \n\n#### Component(s):\n\nLecture 3 hours per week; Tutorial 1 hour per week\n\n###\n\nSOEN 363 Data Systems for Software Engineers (3 credits)\n\n#### Prerequisite/Corequisite:\n\nThe following course must be completed previously: [COMP\n352](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-\nengineering-and-computer-science/section-71-70-department-of-computer-science-\nand-software-engineering/section-71-70-10-computer-science-and-software-\nengineering-courses.html#3565).\n\n#### Description:\n\nThis course covers the following topics: introduction to the current data\necosystem; relational databases; key\u00e2\u0080\u0091value databases; document databases;\ncolumn databases; graph databases; RDF stores; parallel and distributed file\nsystems, data processing engines; data stream analytics; and data\ninfrastructure.\n\n#### Component(s):\n\nLecture 3 hours per week; Tutorial 1 hour per week\n\n#### Notes:\n\n  \n\n  * Students who have received credit for  [COMP 353](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-engineering-and-computer-science/section-71-70-department-of-computer-science-and-software-engineering/section-71-70-10-computer-science-and-software-engineering-courses.html#3567) may not take this course for credit.\n\n###\n\nSOEN 384 Management, Measurement and Quality Control (3 credits)\n\n#### Prerequisite/Corequisite:\n\nThe following courses must be completed previously:  [ENCS\n282](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-\nengineering-and-computer-science/section-71-60-engineering-course-\ndescriptions/engineering-and-computer-science-courses.html#3482);  [SOEN\n341](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-\nengineering-and-computer-science/section-71-70-department-of-computer-science-\nand-software-engineering/section-71-70-10-computer-science-and-software-\nengineering-courses.html#3697).\n\n#### Description:\n\nOrganization of large software development. Roles of team members, leaders,\nmanagers, stakeholders, and users. Tools for monitoring and controlling a\nschedule. Financial, organizational, human, and computational resources\nallocation and control. Project and quality reviews, inspections, and\nwalkthroughs. Risk management. Communication and collaboration. Cause and\neffects of project failure. Project management via the Internet. Quality\nassurance and control.\n\n#### Component(s):\n\nLecture 3 hours per week; Tutorial 1 hour per week\n\n###\n\nSOEN 385 Control Systems and Applications (3 credits)\n\n#### Prerequisite/Corequisite:\n\nThe following courses must be completed previously:  [ENGR\n213](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-\nengineering-and-computer-science/section-71-60-engineering-course-\ndescriptions/engineering-courses.html#3530),  [ENGR\n233](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-\nengineering-and-computer-science/section-71-60-engineering-course-\ndescriptions/engineering-courses.html#3531).\n\n#### Description:\n\nMathematical modelling of dynamical systems; block diagrams; feedback; open\nand closed loops. Linear differential equations; time domain analysis; free,\nforced, and total response; steady state and transient response. Laplace\ntransform and inverse transform; second order systems. Transfer functions and\nstability. Control system design: PID and root locus techniques. Computer\nsimulation of control systems. Applications.\n\n#### Component(s):\n\nLecture 3 hours per week; Tutorial 1 hour per week\n\n###\n\nSOEN 387 Web\u00e2\u0080\u0091Based Enterprise Application Design (3 credits)\n\n#### Prerequisite/Corequisite:\n\nThe following course must be completed previously or concurrently:  [COMP\n353](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-\nengineering-and-computer-science/section-71-70-department-of-computer-science-\nand-software-engineering/section-71-70-10-computer-science-and-software-\nengineering-courses.html#3567) or [SOEN\n363](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-\nengineering-and-computer-science/section-71-70-department-of-computer-science-\nand-software-engineering/section-71-70-10-computer-science-and-software-\nengineering-courses.html#3708). The following courses must be completed\npreviously:  [COMP\n354](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-\nengineering-and-computer-science/section-71-70-department-of-computer-science-\nand-software-engineering/section-71-70-10-computer-science-and-software-\nengineering-courses.html#3568) or  [SOEN\n341](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-\nengineering-and-computer-science/section-71-70-department-of-computer-science-\nand-software-engineering/section-71-70-10-computer-science-and-software-\nengineering-courses.html#3697);  [SOEN\n287](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-\nengineering-and-computer-science/section-71-70-department-of-computer-science-\nand-software-engineering/section-71-70-10-computer-science-and-software-\nengineering-courses.html#3690).\n\n#### Description:\n\nThis course introduces Hypertext Transfer Protocol (HTTP), and client/server\nand layered architectures for Web-based Enterprise Applications (WEA). The\ncourse covers Application, Presentation, Domain and Data Source design\npatterns. Students learn how to use Java servlets and Java Server Pages. The\ncourse also covers authentication, security and transaction processing, as\nwell as system-level testing of web applications.\n\n#### Component(s):\n\nLecture 3 hours per week; Tutorial 1 hour per week\n\n###\n\nSOEN 390 Software Engineering Team Design Project (3.5 credits)\n\n#### Prerequisite/Corequisite:\n\nThe following courses must be completed previously or concurrently:  [SOEN\n345](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-\nengineering-and-computer-science/section-71-70-department-of-computer-science-\nand-software-engineering/section-71-70-10-computer-science-and-software-\nengineering-courses.html#3707) and  [SOEN\n357](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-\nengineering-and-computer-science/section-71-70-department-of-computer-science-\nand-software-engineering/section-71-70-10-computer-science-and-software-\nengineering-courses.html#24160).\n\n#### Description:\n\nStudents work in teams to design and implement a software project from\nrequirements provided by the coordinator. Each team will demonstrate the\nsoftware and the testing of the software, and prepare adequate documentation\nfor it. In addition, each team will generate a report based on the process of\ndevelopment.\n\n#### Component(s):\n\nLecture 3 hours per week; Tutorial 1 hour per week; Laboratory 3 hours per\nweek\n\n###\n\nSOEN 422 Embedded Systems and Software (4 credits)\n\n#### Prerequisite/Corequisite:\n\nThe following course must be completed previously:  [COMP\n346](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-\nengineering-and-computer-science/section-71-70-department-of-computer-science-\nand-software-engineering/section-71-70-10-computer-science-and-software-\nengineering-courses.html#3556).\n\n#### Description:\n\nThis course covers the following topics: embedded computer system\narchitectures; programming of interface and peripheral control registers;\nanalog to digital conversion and motor control using pulse width modulation;\ninterrupts, communication methods and their application to interface control\nand multi\u00e2\u0080\u0091computer systems; architecture and operating systems of advanced\nembedded designs; design and testing of integrated systems; advanced topics.  \n\n#### Component(s):\n\nLecture 3 hours per week; Tutorial 1 hour per week; Laboratory 2 hours per\nweek\n\n#### Notes:\n\n  \n\n  * Students who have received credit for COEN 421 may not take this course for credit.\n\n###\n\nSOEN 423 Distributed Systems (4 credits)\n\n#### Prerequisite/Corequisite:\n\nThe following course must be completed previously:  [COMP\n346](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-\nengineering-and-computer-science/section-71-70-department-of-computer-science-\nand-software-engineering/section-71-70-10-computer-science-and-software-\nengineering-courses.html#3556).\n\n#### Description:\n\nThis course covers the following topics: principles of distributed computing\nincluding scalability, transparency, concurrency, consistency, fault\ntolerance, high availability; client\u00e2\u0080\u0091server interaction technologies\nincluding interprocess communication, sockets, group communication, remote\nprocedure call, remote method invocation, object request broker, web services;\nserver design techniques including process replication, fault tolerance\nthrough passive replication, high availability through active replication,\ncoordination and agreement, transactions and concurrency control.\n\n#### Component(s):\n\nLecture 3 hours per week; Tutorial 1 hour per week; Laboratory 2 hours per\nweek\n\n###\n\nSOEN 448 Management of Evolving Systems (3 credits)\n\n#### Prerequisite/Corequisite:\n\nThe following courses must be completed previously:  [SOEN\n342](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-\nengineering-and-computer-science/section-71-70-department-of-computer-science-\nand-software-engineering/section-71-70-10-computer-science-and-software-\nengineering-courses.html#3699),  [SOEN\n343](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-\nengineering-and-computer-science/section-71-70-department-of-computer-science-\nand-software-engineering/section-71-70-10-computer-science-and-software-\nengineering-courses.html#3701).\n\n#### Description:\n\nThis course covers the following topics: software maintenance (corrective,\nperfective, and adaptive); software reuse; construction of reusable software;\ntechniques for reverse engineering and re\u00e2\u0080\u0091engineering software; software\ndevelopment as \u201cgrowing\u201d software; long\u00e2\u0080\u0091term evolution of existing software\nsystems.\n\n#### Component(s):\n\nLecture 3 hours per week\n\n###\n\nSOEN 471 Big Data Analytics (4 credits)\n\n#### Prerequisite/Corequisite:\n\nThe following course must be completed previously:  [COMP\n352](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-\nengineering-and-computer-science/section-71-70-department-of-computer-science-\nand-software-engineering/section-71-70-10-computer-science-and-software-\nengineering-courses.html#3565).\n\n#### Description:\n\nThis course focuses on the fundamentals of the big data terminology, concepts\nand technologies. For the technical aspects of big data management systems,\nthe course focuses on big data engines, programming models and file systems.\nSpecific techniques covered include supervised classification, recommender\nsystems, data clustering, frequent itemsets mining, similarity search, data\nstreams and graph analysis. A project provides extensive hands-on experience.\n\n#### Component(s):\n\nLecture 3 hours per week; Laboratory 2 hours per week\n\n###\n\nSOEN 487 Web Services and Applications (4 credits)\n\n#### Prerequisite/Corequisite:\n\nThe following courses must be completed previously:  [SOEN\n387](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-\nengineering-and-computer-science/section-71-70-department-of-computer-science-\nand-software-engineering/section-71-70-10-computer-science-and-software-\nengineering-courses.html#3717).\n\n#### Description:\n\nThis course covers the following topics: analysis and design of web services\nand applications; advanced architectures for the design, deployment, and\ntesting of large multi\u00e2\u0080\u0091server web services and applications; Service\nOriented Architecture (SOA); Electronic Commerce; security; load balancing;\nstress testing.\n\n#### Component(s):\n\nLecture 3 hours per week; Tutorial 1 hour per week; Laboratory 2 hours per\nweek\n\n###\n\nSOEN 490 Capstone Software Engineering Design Project (6 credits)\n\n#### Prerequisite/Corequisite:\n\nThe following courses must be completed previously:  [SOEN\n390](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-\nengineering-and-computer-science/section-71-70-department-of-computer-science-\nand-software-engineering/section-71-70-10-computer-science-and-software-\nengineering-courses.html#3719). Students must have completed 75 credits in the\nprogram prior to enrolling.\n\n#### Description:\n\nStudents work in teams of at least four members to construct a significant\nsoftware application. The class meets at regular intervals. Team members will\ngive a presentation of their contribution to the project.\n\n#### Component(s):\n\nLecture 3 hours per week; Laboratory 2 hours per week\n\n###\n\nSOEN 491 Software Engineering Project (1 credits)\n\n#### Prerequisite/Corequisite:\n\nPermission of the undergraduate program director is required.\n\n#### Description:\n\nTheoretical or practical project in an advanced topic in software engineering.\n\n#### Component(s):\n\nLecture\n\n###\n\nSOEN 498 Topics in Software Engineering (3 credits)\n\n#### Prerequisite/Corequisite:\n\nPermission of the undergraduate program director is required.\n\n#### Description:\n\nThis course may be offered in a given year upon the authorization of the\nDepartment. The content may vary from offering to offering and will be chosen\nto complement the available elective courses.\n\n#### Component(s):\n\nLecture 3 hours per week.\n\n###\n\nSOEN 499 Topics in Software Engineering with Lab (4 credits)\n\n#### Prerequisite/Corequisite:\n\nPermission of the Department is required.\n\n#### Description:\n\nThis course may be offered in a given year upon the authorization of the\nDepartment. The content may vary from offering to offering and will be chosen\nto complement the available elective courses.\n\n#### Component(s):\n\nLecture 3 hours per week; Laboratory 2 hours per week\n\n",
                    "subpages": {}
                },
                "https://www.concordia.ca/ginacody/computer-science-software-eng/programs/computer-science/bachelor/bcompsc-general/course-sequences.html": {
                    "url": "https://www.concordia.ca/ginacody/computer-science-software-eng/programs/computer-science/bachelor/bcompsc-general/course-sequences.html",
                    "title": "Course sequences for General Program - Concordia University",
                    "meta_description": "",
                    "content": "# Course sequences for General Program\n\nEngineering students must follow the approved course sequence for their\nprogram to ensure graduation after four years (8 terms) of study. Registering\nfor the sections for your program means no time conflicts or problems with\nyour courses.\n\nAll students in engineering programs must complete all 200-level courses in\ntheir programs prior to commencing courses at the 400-level.\n\nStudents must choose technical electives from the approved list in the\nUndergraduate Calendar. Topics offered in these courses change overtime to\nensure your program curriculum remains relevant. Some technical electives may\nnot be offered in a given academic year.\n\nCapstone Design Project course (SOEN 490 or COEN 490) extend over two academic\nterms.\n\nThe COMP and SOEN Options have been removed from the program. Students\nadmitted for Fall 2021 should follow the General Program course sequence.\n\n  * COMP students who were already admitted to an option can remain in their option.  \n\n  * SOEN students who were already admitted to an option and graduating in or before Spring 2024 can remain in their option.\n  * For full details, please see the Curriculum letters for [COMP](/content/dam/ginacody/csse/docs/Curriculum-letter-COMP-2020-2021.pdf) and [SOEN](/content/dam/ginacody/csse/docs/Curriculum-letter-SOEN-2020-2021.pdf). \n\n* * *\n\n####\n\n#### Course sequences\n\n  * [General Program - Course sequences (January, September, Co-op)](/content/dam/ginacody/csse/docs/COMP_General_Program.pdf)\n  * [First year for Mature Entry and Extended Credit](/ginacody/computer-science-software-eng/programs/course-sequences/compsc-mature-entry.html)\n\n###\n\nUpdated Curriculum Requirement Letters\n\nLetter sent to all engineering students in:\n\n[July 2022](/content/dam/ginacody/docs/curriculum-letters/2022_23COMP.pdf)\n\n[March 2021](/content/dam/ginacody/csse/docs/transition-letter-\nCOMP-2021-2022.pdf)\n\n[Nov 2020](/content/dam/ginacody/csse/docs/Curriculum-letter-\nCOMP-2020-2021.pdf)\n\n  * [Bachelor program in Computer Science (BCompSc)](/ginacody/computer-science-software-eng/programs/computer-science/bachelor.html)\n    * [Computer Science (BCompSc)](/ginacody/computer-science-software-eng/programs/computer-science/bachelor/bcompsc-general.html)\n      * [Course sequences](/ginacody/computer-science-software-eng/programs/computer-science/bachelor/bcompsc-general/course-sequences.html)\n    * [BCompSc Data Science](/ginacody/computer-science-software-eng/programs/computer-science/bachelor/bcompsc-data-science.html)\n      * [Course sequences](/ginacody/computer-science-software-eng/programs/computer-science/bachelor/bcompsc-data-science/course-sequences.html)\n    * [BCompSc Computation Arts and Computer Science Joint Major](/ginacody/computer-science-software-eng/programs/computer-science/bachelor/bcompsc-computer-applications-computation-arts.html)\n      * [Course sequence](/ginacody/computer-science-software-eng/programs/computer-science/bachelor/bcompsc-computer-applications-computation-arts/course-sequence.html)\n    * [Computer Science (minor)](/ginacody/computer-science-software-eng/programs/computer-science/bachelor/compsc-minor.html)\n    * [Honours program](/ginacody/computer-science-software-eng/programs/computer-science/bachelor/bcompsc-honours.html)\n    * [BCompSc Health and Life Sciences](/ginacody/computer-science-software-eng/programs/computer-science/bachelor/bcompsc-health-life-sciences.html)\n      * [Course sequences](/ginacody/computer-science-software-eng/programs/computer-science/bachelor/bcompsc-health-life-sciences/course-sequences.html)\n\n",
                    "subpages": {}
                },
                "https://www.concordia.ca/students/success/career-planning/paths/computer-science-software-engineering.html": {
                    "url": "https://www.concordia.ca/students/success/career-planning/paths/computer-science-software-engineering.html",
                    "title": "What can I do with a Computer Science and Software Engineering degree? Jobs & Career Paths - Concordia University - Concordia University",
                    "meta_description": "",
                    "content": "# Computer Science and Software Engineering\n\nWhat can I do with my degree Computer Science and Software Engineering?\n\n  * About\n  * Skills\n  * Work settings\n  * Career possibilities\n  * Job search\n  * Networking\n\n## About the program\n\nConcordia University\u00e2\u0080\u0099s Department of Computer Science and Software\nEngineering offers a Bachelor of/Baccalaureate in Computer Science and a BEng\nin Software Engineering. Co-operative education programs are available to a\nlimited number of students. At the graduate level the University offers a\nDoctor of/Doctorate in Philosophy (Computer Science), Master of/ Magisteriate\nScience in Computer Science, Master of/ Magisteriate in Applied Computer\nScience, Master of/Magisteriate in Applied Science (Software Engineering),\nMaster of/ Magisteriate in Software Engineering and a Graduate Diploma in\nComputer Science.\n\nFor the latest information on this program, visit the [Department of Computer\nScience and Software Engineering](/ginacody/computer-science-software-\neng.html).\n\n## Skills developed\n\nAs a student in Computer Science and Software Engineering, you will have the\nopportunity to develop a wide range of skills, some of which are listed below.\n\nComputer Science professionals require strong computer science, mathematical,\nproblem solving and analytical skills; they should have good communication and\nteam playing skills.\n\nYour transferrable skills can be applied to many different jobs and situations\nthat go beyond your field of study.\n\n###\n\nTechnical knowledge skills\n\n  * Familiarity with Business and Management Principles\n  * Knowledge of Computers and Electronics\n  * Math and Science Skills\n  * Interest in Research\n  * Strong Technical skills\n\n###\n\nCommunication skills\n\n  * Communication Skills (Written and Oral)\n  * Public Dealing Skills\n\n  * Explain complex concepts, theories and ideas to others effectively\n  * Read and write and reports and essays\n  * Interact with others and build professional relationships\n\n###\n\nManagement and organizational skills\n\n  * Ability to Work Independently\n  * Attention to Details\n  * Entrepreneurial Approach\n  * Project Management Skills\n  * Patience \n  * Systematic Approach to Troubleshooting\n  * Time Management Skills\n\n  * Manage tasks and meet deadlines\n  * Work under pressure\n  * Influence and persuade\n  * Make decisions and use sound judgement\n\n###\n\nTeamwork\n\n  * Dependability\n  * Flexibility\n  * Teamwork\n\n  * Delegate\n  * Manage conflict\n  * Give and receive feedback\n  * Lead and follow\n  * Negotiate\n\n###\n\nCritical thinking and problem solving\n\n  * Creative and Inventive Thinking\n  * Curiosity\n  * Logical Mind\n  * Persistence\n\n  * Observe and interpret data\n  * Analyze and evaluate conflicting information to generate and informed judgement or conclusion\n  * Understand complex problems and identify solutions\n\n## Potential work settings\n\nComputer Science professionals typically work for software manufacturers,\ninformation technology consulting firms, information technology research and\ndevelopment firms and in information technology units in private and public\nsectors. To research specific employers who hire those in the field, there are\nmany resources available in such locations as the Career Resource Centre, the\nWebster Library, Vanier Library and the Internet.\n\nBelow are examples of work settings where you can gain experience and develop\nyour skills in your field of study.\n\n  * Aerospace Industry\n  * Airports\n  * Banks\n  * City Planning Firms\n  * Commercial Houses\n  * Computer System Design Industry\n  * Corporations\n  * Data Warehouses\n  * Education\n  * Electronics Industry\n  * Engineering Industry\n  * Entertainment and Media\n  * Factories and Plants\n  * Film Industry\n  * Financial Institutes\n  * Government Offices\n  * Graphic Studios\n  * Hospitals\n\n  * Industrial Research Centers\n  * Insurance Companies\n  * Media\n  * Medicine\n  * Meteorological Centers\n  * Military\n  * Multimedia Studios\n  * Newspapers/ Magazines\n  * Non-profit Organizations\n  * Private For-profit Sector\n  * Production Houses\n  * Research Organizations\n  * Scientific Laboratories\n  * Software Houses\n  * Stores/ Shopping Malls\n  * Telecommunications Industry\n  * Television Industry\n\n## What jobs can a Bachelor\u00e2\u0080\u0099s degree in Computer Science and Software\nEngineering lead to?\n\nThe following job titles are representative of the types of entry-level\npositions for which Concordia University students are qualified upon\ngraduation. Computer Science professionals typically work for software\nmanufacturers, information technology consulting firms, information technology\nresearch and development firms and in information technology units in private\nand public sectors.\n\nIn most countries including Canada, only a Professional Engineer (P.Eng.) is\nlicensed to practice engineering in the province or territory where it was\ngranted. The license also gives you the right to use the Engineer title after\nyour name. In Quebec and since April 1, 2019, anyone who wishes to obtain the\nengineer title (Eng.) must first become a candidate to the engineering\nprofession (CEP). This professional admission program replaces the junior\nengineer program and prepares future engineers to practice with rigour and\ncompetence. For more information, please check the [Ordre des ing\u00c3\u00a9nieurs du\nQu\u00c3\u00a9bec.](https://oiq.qc.ca/) For requirements in other provinces, please\ncheck [Engineers Canada](https://engineerscanada.ca/).\n\nPlease note that many positions listed below may require related training and\ncertification, graduate diploma, a second bachelor\u00e2\u0080\u0099s degree, a certificate\nor a graduate diploma and relevant internship and work experience.\n\nFor details on these job titles, main duties and employment requirements visit\n[Canada\u00e2\u0080\u0099s National Occupational Classification\n(NOC)](https://noc.esdc.gc.ca/).\n\n###\n\nEngineering positions\n\n  * Assistant Web Master\n  * Computer Programmer\n  * Computer Systems Analyst\n  * Data Analyst\n  * Database Administrator\n  * Flash Programmer\n  * Game Programmer\n  * Graphic Designer\n  * Information Manager\n  * Information Systems Analyst\n  * IT Analyst\n  * Java Developer\n  * Junior Application Programmer\n  * Junior Programmer/ Developer\n  * Junior Software Developer\n  * Multimedia Programmer\n  * Network Administrator\n  * PHP Developer\n  * Programmer Analyst\n  * Quality Assurance Analyst\n  * Software Designer\n  * Software Engineer\n  * System Administrator\n  * Systems Analyst\n  * Systems Integration Engineer\n  * Systems Programmer\n  * Teacher\n  * Technical Support Specialist\n  * Technical Writer\n  * Test Engineer\n  * Web Developer\n  * Web Editor\n  * Web Programmer\n  * Web Site Designer\n\n###\n\nOther career-related positions\n\n  * Accountant\n  * Application Developer\n  * Audio Programmer\n  * Auditor\n  * Bookkeeper\n  * Computer Operator\n  * Computer Scientist\n  * Content Creator\n  * Digital Artist\n  * Embedded Software Engineer\n  * Entrepreneur\n  * Information Systems Scientist\n  * Internet/Intranet Technologies\n  * Manager\n  * Media Developer\n  * Project Manager\n  * Purchasing Agent/ Vendor\n  * Records Clerk\n  * Researcher\n  * Software Developer\n  * Special Effects Programmer\n  * Theorist\n  * University Professor\n  * Webmaster\n\n## Start your job search\n\n### Explore career options\n\nExplore the types of jobs for each industry and find out about required\nskills, education level and salary ranges in Canada:\n\n  * [Occupation - Government of Canada Job Bank:](http://www.jobbank.gc.ca/trend-analysis/search-occupations) Find out about job prospects, wages and skills for specific job titles. You can use the job titles listed in the Career Possibilities \u00e2\u0080\u0093 Bachelor degree and Career Possibilities \u00e2\u0080\u0093 Beyond the bachelor degree for your search.\n  * [Field of study \u00e2\u0080\u0093 Government of Canada Job Bank](http://www.jobbank.gc.ca/career-planning/search-field-of-study) : Find out about employment rates, wages and the types of jobs related to a specific field of study.\n  * [Search job titles or companies - LinkedIn](https://www.linkedin.com/jobs/): Search by job title or field of study. You can also find out what type of positions individuals with the same degree as you have occupied.\n\n### **Career Cruising**\n\nExplore your interests, learn about careers and find jobs on the Career\nCruising website. Find the link and login information in the Student Hub's [My\nCU Account](https://hub.concordia.ca/students/account.html?category=career).\n\n* * *\n\n### Search for jobs\n\nBrowse the websites below to find jobs available in Quebec and Canada related\nto your field of study. You can also search the [CAPS online job\nbank](/students/success/career-planning/job-search/job-bank.html) or [find\nemployers in Canada](https://www.canadastop100.com/tcd/) that hire new\ngraduates in your field.\n\n**Canadian**\n\n  * [ECO Canada](https://eco.ca/new-practitioners/employment-support/job-board/#/)\n  * [Engineering Careers](https://www.engineeringcareers.ca/)\n  * [Genium360](http://www.genium360.ca/en-us/)\n  * [Linkedin](http://www.linkedin.com/)\n  * [Indeed](http://www.indeed.ca/)\n\n**International**\n\n  * [Engineering & Science Career Network](https://escnnetwork.org/jobs/)\n  * [EuroEngineer](https://www.euroengineerjobs.com/)\n  * [Institute of Engineering and Technology (IET)](https://engineering-jobs.theiet.org/)\n\n### Book an appointment\n\nTo get help with your career exploration and goal setting, book an appointment\nwith a [career counsellor](/students/success/career-planning/counselling-\nadvising.html#counsellor). For job search tips on finding the job you want,\nbook an appointment with a [career advisor](/students/success/career-\nplanning/counselling-advising.html#advising).\n\nTo book an appointment with either professional, please call 514-848-2424 ext.\n7345\n\n_*Only current Concordia students and recent alumni can access this service_\n\n## Networking and professional associations\n\nMaking wise career decisions requires exploring your field. A multitude of\nInternet sites and other resources will help you do this to the best of your\nability. Professional association sites, in particular, are very useful for\ntheir career descriptions and job hunting tips. Moreover, these authoritative\nsites frequently provide links to Internet sites which announce job openings\nand list potential employers.\n\n### Here are a few recommended sites:\n\n* * *\n\n###\n\nCanada\n\n  * [Canadian Information Processing Society (CIPS)](http://www.cips.ca)\n  * [Engineers Canada](http://www.engineerscanada.ca/)\n  * [Information Technology Association of Canada](http://itac.ca)\n  * [Ordre des ing\u00c3\u00a9nieurs du Qu\u00c3\u00a9bec](http://www.oiq.qc.ca/)\n\n###\n\nInternational\n\n  * [](http://www.asce.org/)[Association for Computing Machinery](http://www.acm.org/)\n  * [National Society of Professional Engineer](http://www.nspe.org/)\n\n",
                    "subpages": {}
                },
                "https://www.concordia.ca/academics/undergraduate/computer-engineering.html": {
                    "url": "https://www.concordia.ca/academics/undergraduate/computer-engineering.html",
                    "title": "Computer Engineering (BEng | Bachelors of Engineering) | Undergraduate Admissions - Apply Here - Concordia University",
                    "meta_description": "",
                    "content": "# Computer Engineering (BEng)\n\n[Apply now](/admissions/undergraduate/apply-now.html)\n\nDegree\n\nBachelor of Engineering (BEng)\n\nDepartment\n\n[Electrical and Computer Engineering](/ginacody/electrical-computer-eng.html)\n\nFaculty\n\n[Gina Cody School of Engineering and Computer Science](/ginacody.html)\n\n  * Program overview\n  * Program structure\n  * Admission criteria\n  * After your degree\n\nDuration\n\n4 to 5 years\n\nPrimary campus\n\nSir George Williams (SGW)\n\nExperiential learning\n\nCo-op, Internship\n\nStart term\n\nFall, Winter\n\n  * Program overview\n  * Program structure\n  * Admission criteria\n  * After your degree\n\n## Virtual information sessions\n\nWant to know how we're training the next generation of engineers and computer\nscientists? Join us to learn about the Gina Cody School's undergraduate\nprograms and plans to advance integrated technologies in a socially\nresponsible manner.\n\n[ Register to an upcoming info session\n](https://go.concordia.ca/events/upcoming-events-\nlist/?event=GCS%20UnderGraduate%20Info%20Sessions)\n\n## Why study Computer Engineering?\n\nWithout computer hardware and software, there would be no smart phones, DVD\nplayers, digital recorders and critical systems in airplane cockpits, modern\ncars, or computerized medical devices. As a computer engineer, your knowledge\nof computer architecture, digital electronics, circuits and digital\ncommunication will lead to innovations or bring about another information\nrevolution.\n\nChoose the**** Avionics and Embedded Systems Option or create your own path\nbased on electives that suit your interests. Our state-of-the-art labs\ndesigned for programming in assembly language, digital systems and high-\nperformance computing will give you experience with the tools you will use in\nthe field. Through labs, lectures and projects, you\u00e2\u0080\u0099ll also:\n\n  * Learn programming methodology to design data structures and algorithms\n  * Learn to resolve issues of system interfaces and integration\n  * Integrate engineering solutions into biomedical and biological systems\n  * Design Internet of Things (IoT)/cyber-physical systems to solve real world problems\n  * Design embedded computing and communication systems for high-performance applications, such as a small, unmanned aircraft\n\nAll of our Engineering programs are accredited by the [Canadian Engineering\nAccreditation Board](http://www.engineerscanada.ca/accreditation) and you\u00e2\u0080\u0099ll\ngraduate eligible to become a registered professional engineer.\n\n## Program highlights\n\n  * The student-run Software Engineering and Computer Science Student Society (SCS) organizes coding nights, algorithm practice, tutorials, social events, and networking opportunities.\n\n## Special funding for out-of-province students\n\nUp to **$4000** for undergraduate programs.  \n\n[Undergraduate applicants](/students/financial/scholarships-funding/out-of-\nprovince-awards.html)\n\n## Program structure\n\nThe Bachelor of Engineering in Computer Engineering takes a minimum of four to\nfive years (120 \u00e2\u0080\u0093 150 credits) of full-time study, [depending on your\nacademic background](/academics/degrees/program-length.html).\n\nAll students accepted in the Bachelor of Computer Engineering program who are\nnot enrolled in the Co-op program must complete one 12-17-week internship to\ngraduate. This internship program, C.Edge, is administered by the [Institute\nof Co-operative Education](/academics/co-op.html) and will allow ECE students\nto have one paid internship in their field of study.\n\n* * *\n\n### Computer Engineering program includes the following:\n\n  * Engineering core courses\n  * Computer Engineering core courses\n  * Elective courses\n\n* * *\n\n[ See the curriculum details in the Undergraduate Calendar\n](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-\nengineering-and-computer-science/section-71-30-department-of-electrical-and-\ncomputer-engineering/section-71-30-2-course-requirements-beng-in-computer-\nengineering-.html)\n\n[ See the course descriptions in the Undergraduate Calendar\n](/academics/undergraduate/calendar/current/section-71-gina-cody-school-of-\nengineering-and-computer-science/section-71-60-engineering-course-\ndescriptions.html)\n\n* * *\n\n**Course sequences**\n\n[ See the course sequence by semester of entry into the program\n](/ginacody/electrical-computer-eng/students/undergraduate/course-\nsequences/course-sequences.html)\n\n* * *\n\n### Sample Capstone projects\n\n  * Develop a video game system that runs on a programmable chip (FPGA)\n  * Develop body sensors to measure gait, and monitor tread slippage\n  * Design a low cost incubator that monitors and maintains temperature and humidity within a range\n  * Program an autonomous personal-service robot\n  * Design an embedded computing and communication system to control multiple small, unmanned aircraft flying in formation\n\n* * *\n\n[ Learn more about final year Capstone projects ](/ginacody/electrical-\ncomputer-eng/students/capstone.html)\n\n* * *\n\n### Co-op program\n\nThe Co-op program gives you the chance to complete **paid work terms** that\nlast 12 to 16 weeks. As a Co-op student, you will play a large role in testing\nsoftware packages designed and implemented by engineers. You may also:\n\n  * Design, build and test computing systems\n  * Design and implement software systems\n  * Develop and maintain databases\n\n* * *\n\n[ Learn more about the Co-op program ](/ginacody/programs/co-op.html)\n\n* * *\n\n### Career Edge internship\n\nStudents not enrolled in Co-op will complete a C.Edge internship as part of\ntheir degree requirements. This full-time paid internship lasts between 12-17\nweeks, and enables students to:  \n\n  * Strategically develop their career while earning an income \n  * Get support finding an internship in their field \n  * Apply their academic skills in a real-world work environment \n  * Take advantage of networking and mentoring opportunities \n  * Develop important personal and professional skills\n\n* * *\n\n[ Learn more about Career Edge (C.Edge) ](/academics/co-op/internships/career-\nedge.html)\n\n## Admission criteria\n\n### Minimum cut-off averages and course requirements\n\n  * **Quebec CEGEP:** 26 overall, 25 math, 25 physics\n    * Admission is based on applicants\u00e2\u0080\u0099 overall, math and physics CRC indicated above and completion of the following classes as part of their DEC: General Chemistry 1; Calculus 1 and Calculus 2 and Linear Algebra; Mechanics and Electricity and Magnetism.\n    * Students completing one of the **eligible technical DECs** may qualify for admission without the listed prerequisites. However, if the prerequisites are taken, a minimum of 25 in math and a 25 in physics are required.  \n\n      * Eligible technical DECs include 244.A0, 420.A0/BO/AA, 243.D0, 243.C0, 243.B0, 243.A0\n      * [Advanced standing](/admissions/undergraduate/requirements/cegep-students/partnerships.html#gcs) may be possible\n    * [Additional information for CEGEP applicants](/admissions/undergraduate/requirements/cegep-students.html)\n  * **High school:** B overall, B+ in math, B+ in physics\n    * One math from Pre-Calculus, Calculus, or equivalent\n    * Grade 12 or university-preparatory physics\n    * [Canadian curricula course requirements](/admissions/undergraduate/requirements/canada.html)\n    * [Accepted international qualifications](/admissions/undergraduate/requirements/international.html)\n    * ACT or SAT is **not** required\n    * AP exams are **not** required but may qualify you for advanced standing\n  * **Indigenous Bridging Program:** First Nations, Inuit and M\u00c3\u00a9tis students who do not meet Concordia\u00e2\u0080\u0099s conventional admission requirements may be eligible for admission through the [Kai\u00c3\u00a9:ri Nikawer\u00c3\u00a1:ke Indigenous Bridging Program](/academics/undergraduate/indigenous-bridging-beng.html)\n  * **International Baccalaureate (IB) diploma** : 29 overall, 4 HL or 5 SL math, 5 HL or SL physics\n    * one math (Applications and Interpretations HL, Analysis and Approaches HL or Analysis and Approaches SL)\n    * one of the math or physics courses must be completed at the HL level\n  * **International Baccalaureate Career-related Programme (CP):** 29 overall, 4 HL or 5 SL math, 5 HL or SL physics\n    * Same as International Baccalaureate Diploma Programme (DP) requirements\n    * [Additional Career-related Programme (CP) course requirements](/admissions/undergraduate/requirements/international.html#ib-cp \"https://www.concordia.ca/admissions/undergraduate/requirements/international.html#ib-cp\")\n  * **Baccalaur\u00c3\u00a9at fran\u00c3\u00a7ais:** 13 overall, 14 in math, 14 in science\n    * Required courses:\n      * _Premi\u00c3\u00a8re: Sp\u00c3\u00a9cialit\u00c3\u00a9 math\u00c3\u00a9matiques_ **and** _Sp\u00c3\u00a9cialit\u00c3\u00a9 physique-chimie_\n      * _Terminale: Sp\u00c3\u00a9cialit\u00c3\u00a9 math\u00c3\u00a9matiques_ (also accepted, _Sp\u00c3\u00a9cialit\u00c3\u00a9 Physique-Chimie**and** Math\u00c3\u00a9matiques Compl\u00c3\u00a9mentaires)_\n    * [Additional information for Baccalaur\u00c3\u00a9at fran\u00c3\u00a7ais applicants](/admissions/undergraduate/requirements/international.html)\n  * **British system of education (GCE):**\n    * **A-levels:** At least two A-level exams BB, B in math, B in physics or **_or_**\n    * **AS-levels:** At least 4 AS-level exams with equivalent results _**or**_\n    * **BTEC:** Level 3 Diploma or Extended Diploma in a related subject area with equivalent results\n    * Students without math or physics A-levels may be admissible based on AS-level or iGCSE/GCSE/O-Level exam results. Students should include all their exam results from iGCSE (or equivalent) onwards to support their application.\n    * [Additional information for British System of Education (GCE) applicants](/admissions/undergraduate/requirements/international.html)\n  * **University transfer (internal):** 2.7 overall, 2.7 in math/physics, 2.0 in courses offered by the Gina Cody School of Engineering and Computer Science\n    * PHYS 204 or 205 (or equivalent)\n    * At least two of the following (or equivalent): MATH 203, 204, 205\n  * **University transfer (external):** B overall, B+ in math, B+ in physics\n    * Courses in the disciplines of Calculus, Chemistry and Physics\n\n* * *\n\n[ You must meet Concordia's minimum admission requirements\n](/admissions/undergraduate/requirements.html)\n\n* * *\n\nMinimum cut-off averages should be used as indicators. The cut-off data may\nchange depending on the applicant pool. Applicants who meet the stated minimum\nrequirements are not guaranteed admission to these programs.\n\n* * *\n\n## Application deadlines\n\n### It\u00e2\u0080\u0099s not too late to apply\n\nMost undergraduate programs are still accepting applications for fall 2025.\n\n[ Check program availability\n](/admissions/undergraduate/programs/availability.html)\n\n* * *\n\n#### **FALL ENTRY (September)**\n\nDeadline: **March 1**  \n**International applicants:** Apply **no later than February 1** to allow time\nfor immigration document processing. However, applying **earlier is strongly\nrecommended**. Immigration processing times vary by country, and delays could\nprevent you from starting your studies on time.\n\n#### **WINTER ENTRY (January)**\n\nDeadline: **November 1**  \n**International applicants:** Apply **no later than August 1** to allow time\nfor immigration document processing. However, applying **earlier is strongly\nrecommended**. Immigration processing times vary by country, and delays could\nprevent you from starting your studies on time.\n\n* * *\n\n_We reserve the right to close admission to a program at any time after the\nofficial deadline without prior notice._\n\n* * *\n\n## Funding note\n\n**Quebec residents** who enroll in certain programs and meet the eligibility\ncriteria may apply for funding of $2,500 per term through the Quebec\nPerspective Bursary (Bourse Perspective Quebec).\n\n[ See eligibility ](/students/financial/scholarships-funding/perspective-\nquebec.html)\n\n**United States students** : A U.S. Federal Student Aid-eligible version of\nthis program is offered. This version meets all U.S. regulations (such as no\nco-operative education or e-courses) for eligible programs.\n\n[ Get the full details about U.S. loan eligibility and requirements\n](/students/financial/loans/us/federal-direct.html)\n\n* * *\n\n## After your degree\n\nComputer Engineering alumni have established careers in a range of computing\nfields, including aerospace avionics, real-time embedded systems,\ncommunication systems, software systems and computer architecture and\nhardware. Some graduates have been hired by:\n\n  * Bombardier\n  * CAE Inc.\n  * The Canadian Space Agency\n  * CGI\n  * Ajilon Consulting\n  * Morgan Stanley\n  * Microsoft\n\n* * *\n\n[ Learn more about career options in Computer Engineering\n](/students/success/career-planning/paths/computer-engineering.html)\n\n## Student story\n\n### Ricky Lopez\n\nComputer Engineering\n\nThere\u00e2\u0080\u0099s a student society for everybody, regardless of what your interests\nare.\n\n[Meet Ricky](/content/shared/en/profiles/students/undergraduate/ricky-\nlopez.html?c=/admissions/undergraduate)\n\n[ Check out more student stories ](/admissions/student-profiles.html)\n\n## Other programs of interest\n\n###\n\nElectrical Engineering (BEng)\n\n  * Co-op\n  * Internship\n\nControl energy with a flip of a switch. Design next-generation microchips or\nflight control systems. As electrical engineers you rein in electrons, guide\nthem through the devices we depend on every day \u00e2\u0080\u0094 whether they are very\nsmall (like the microchips in our cell phones) or very large (like the power\ngrids or charging stations for electric cars).\n\nDepartment\n\n[Department of Electrical and Computer Engineering](/ginacody/electrical-\ncomputer-eng.html)\n\nFaculty\n\n[Gina Cody School of Engineering and Computer Science](/ginacody.html)\n\n[View program details](/academics/undergraduate/electrical-engineering.html\n\"Electrical Engineering \\(BEng\\)\")\n\n###\n\nSoftware Engineering (BEng)\n\n  * Co-op\n\nDesign, code, and test software products \u00e2\u0080\u0093 with the big picture in mind.\nThink financial software, airline ticketing systems or information databases.\nAs a software engineer, your expertise in analog/digital signal processing,\nmicroprocessors, microwaves and fibre optics will give you the tools to tackle\nthese challenges everyday.\n\nDepartment\n\n[Department of Computer Science and Software Engineering](/ginacody/computer-\nscience-software-eng.html)\n\nFaculty\n\n[Gina Cody School of Engineering and Computer Science](/ginacody.html)\n\n[View program details](/academics/undergraduate/software-engineering.html\n\"Software Engineering \\(BEng\\)\")\n\n",
                    "subpages": {}
                }
            }
        }
    }
}